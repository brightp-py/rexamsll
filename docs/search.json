[{"path":"/articles/google-sheets.html","id":"section2","dir":"Articles","previous_headings":"","what":"Generate .Rmd Files from Google Sheets","title":"Import from Google Sheets","text":"examling allows conveniently write test questions Google Sheets document import .Rmd files use exams package.","code":""},{"path":"/articles/google-sheets.html","id":"section2_1","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Build the Sheet","title":"Import from Google Sheets","text":"Create new Google Sheets document, fill row 1 following headers: ID Question Type Image Ans1, Ans2, Ans3…* Correct Category SubCat  * may use number Ans columns. Simply label accordingly. adding text, click light gray box top right corner select entire spreadsheet.  , set entire Sheet plain text. , Press button says “123” (left font-selection box) choose “Plain Text”.  ensures numbers input saved exactly write . add question, start putting unique identifier ID column. multiple rows identifier, associated (See Design Dynamic Questions). , write main body text question Question column. examling uses R-markdown format text, can, example, bold text typing “**” side.  Type column dictates kind answer expected question. three main choices: schoice - single correct answer, options wrong. mchoice - number correct answers, student graded many select without choosing incorrect answers. string - provided answers student instead given area input text. student’s response must exactly match correct answer receive credit. Type “string”, provide answers student need choose columns starting Ans, including correct incorrect options. need use Ans columns.  Correct column used differently depending Type. schoice questions, Correct value index corresponding correct answer. example provided, correct answer “Giraffe”, column Ans3. Therefore, Correct column say “3”. mchoice questions, Correct value comma-separated list correct indices. example, correct answers lie columns Ans1 Ans3, cell say “1, 3”. string questions, Correct value exact correct answer. example, question “color chlorophyll?”, cell say “green”.  Category SubCat columns used organization naming files. values short, informative names help keep track topics. Questions Category values appear tests.  Now, add another row every question want generate .Rmd file .  Give Sheet title , optionally, click “View” -> “Freeze” -> “1 row” keep header row visible scrolling.","code":""},{"path":"/articles/google-sheets.html","id":"extra-columns","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Extra Columns","title":"Import from Google Sheets","text":"previous section demonstrates columns required import questions, columns allowed. columns can added provide additional functionality, like “Image” “NCorrect” columns. extra columns match one names added question’s metadata. makes easy record searchable tags, warnings, credits. 23 May, 2023, extra metadata tags appear YAML header respective .Rmd file. Later, added exams-specific “Meta-information” footer.","code":""},{"path":"/articles/google-sheets.html","id":"image","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets > Extra Columns","what":"Image","title":"Import from Google Sheets","text":"easily add images questions using Google Sheets, start inserting column titled “Image”.  Select cell column corresponding question want add image . , top menu, select “Insert” > “Image” > “Insert image cell”.  , either upload provide link image want attach, per Google’s instructions. (example, ’ll just use screenshot function wrote ’m lazy get good image tree.) image large, shrunk fit cell. affect appear exams.  Repeat image. ’ve done , set import questions using google2rmd() normal. images downloaded saved img folder directory questions appear correct questions. (case ’re curious image attached , ’s just super simple formula determining whether number even odd.)","code":""},{"path":"/articles/google-sheets.html","id":"section2_3_2","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets > Extra Columns","what":"NChoices","title":"Import from Google Sheets","text":"schoice mchoice questions, may options choose want appear test. example, question “letter vowel?”, choices 26 letters English alphabet. case, can add column titled “NChoices” use specify many options given tests. guaranteed least one options correct answer.","code":""},{"path":"/articles/google-sheets.html","id":"ncorrect","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets > Extra Columns","what":"NCorrect","title":"Import from Google Sheets","text":"similar vein NChoices column “NCorrect” column, specifies many options correct answers. column can used mchoice questions. value column greater total number choices, lowered number choices. example, set NCorrect 5 question 4 possible options, NCorrect value set 4. value provided column, mchoice question choose random number 1 total number options.","code":""},{"path":"/articles/google-sheets.html","id":"section3","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Design Dynamic Questions","title":"Import from Google Sheets","text":"can useful group multiple versions question one .Rmd file. can easily done spreadsheet giving multiple rows value “ID” column. , create two questions related feather colors bird species.  calling google2rmd spreadsheet, generate single .Rmd file contains versions. run, exams2js file, defaults first variation.  want choose variation draw , need use R/exams function expar.  However, lot information spreadsheet redundant. “Type”, “Category”, “Subcat” columns, well three “Ans#” columns, two variations. examling copy data needs earlier variations questions automatically, can safely omit repeated data second variation question.","code":"exams2js(expar(\"Bird1.Rmd\", qvariation = 2))"},{"path":"/articles/google-sheets.html","id":"import-into-r","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Import into R","title":"Import from Google Sheets","text":"Start loading examling package. Use setwd place working directory want folder .Rmd files saved. navigate back spreadsheet containing questions copy entire URL (“https://docs.google.com/spreadsheets/d/…”). Paste URL first argument url examling function google2rmd. Set second argument output_dir folder want store resulting .Rmd files . loading questions sheet spreadsheet first, ’ll need specify index name sheet google2rmd. example, ’re “Sheet2”, include sheet = 2 sheet = \"Sheet2\".  NOTE: index depends order sheets, names. following screenshot, “Sheet3” placed “Sheet2”. , “Sheet3” index 2, “Sheet2” index 3.  run function, asked grant access Google account. select “Send browser new auth process.” R terminal. Even “pre-authorized accounts” available, aren’t reliable, stick logging time start fresh R session. sent browser, select account spreadsheet stored sign . presented following screen.  Check box labeled “See, edit, create, delete Google Drive files.” press “Continue” button. process done! Assuming issues spreadsheet, R load proper Google Sheets document save .Rmd files correct folder. examling also creates log file details import process, can found logs/log folder name {DATE}_{TIME}.log. error, ’ll also see file called {DATE}_{TIME}.msg folder.","code":"library(examling) google2rmd(    \"<URL>\",    \"Example\" ) google2rmd(    \"<URL>\",    \"Example\",    sheet = 2 )"},{"path":"/articles/installation.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"Installation","text":"examling development, recently pushed version can installed GitHub using devtools library. order gain access package’s source code, ’ll need GitHub account permission project administrator access repository. haven’t worked git , check https://docs.github.com/en/get-started/getting-started--git. git account, need create authentication token R can access repositories. just means signing get special password GitHub R can use . start, input GitHub username email associated account respective strings , run code cell. open browser ask sign GitHub bringing page titled “New personal access token”. Start providing reason token’s creation “Note” section. can also change expiration date token, though default value 30 days works perfectly well.  need change selections “Select scopes” section. “repo” section enabled default need give R access .  Now, click green “Create Token” bottom page. presented page looks like following, code starts ghp_. (Note code censored example image.)  Copy code , optionally, save somewhere secure use later. Paste text says <AUTH CODE > chunk . sure delete < >; authentication code within quotes. run code chunk install examling. check examling installed properly, run following code chunk make sure errors.","code":"install.packages(\"devtools\") usethis::use_git_config(user.name = \"<USERNAME>\",                         user.email = \"<YOUR>@<EMAIL>.com\") usethis::create_github_token() library(devtools) install_github(\"examLing/examling\", ref = \"main\",                auth_token = \"<AUTH CODE HERE>\") library(examling)"},{"path":"/articles/spreadsheet-validation.html","id":"spreadsheet-validation","dir":"Articles","previous_headings":"","what":"Spreadsheet Validation","title":"Common Import Errors","text":"importing questions spreadsheet, like one created Google Sheets Excel, examling goes list checks validate sheet. check fails, function throw error.","code":""},{"path":"/articles/spreadsheet-validation.html","id":"dataframe-has-no-values-","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“Dataframe has no values.”","title":"Common Import Errors","text":"Example: error occurs try import data spreadsheet header. Double check pasted correct url selected proper sheet index. Also, ’s good note images don’t count cell values.","code":"Error in examling:::validate_df(df) :    Dataframe has no values. Did you select the wrong sheet?"},{"path":"/articles/spreadsheet-validation.html","id":"error-in-if-nrowdf-0","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“Error in if (nrow(df) == 0)…”","title":"Common Import Errors","text":"Example: error occurs try import data spreadsheet values (even header). Since data sheet, R fails load . Double check ’re importing correct URL sheet.","code":"Error in if (nrow(df) == 0) stop(\"Dataframe has no values. Did you select the wrong sheet?\") :    argument is of length zero In addition: Warning message: No data found on worksheet."},{"path":"/articles/spreadsheet-validation.html","id":"missing-columns","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“Missing columns: …”","title":"Common Import Errors","text":"Example:  header missing least one required columns: Question Type Correct Category Subcat Add listed headers first row sheet, check Build Sheet learn use columns. Side note: Interestingly, headers don’t need first row; just need first non-empty row sheet. can many empty rows ’d like.","code":"Error in examling:::validate_df(df) : Missing columns: type"},{"path":"/articles/spreadsheet-validation.html","id":"no-answer-columns-found","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“No answer columns found”","title":"Common Import Errors","text":"Example:  examling requires least ONE column format “Ans#” sheet, throw error. moment, examling throws error even questions string type, meaning columns empty. case, just add single “Ans1” column leave blank.","code":"Error in examling:::validate_df(df) : No answer columns found"},{"path":"/articles/spreadsheet-validation.html","id":"no-values-in-answer-columns-","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“No values in answer columns.”","title":"Common Import Errors","text":"Example:  error thrown schoice mchoice question answers choose . fix , either: Add answers row. Set “Type” string.","code":"Error in which(na_rows & !sr_rows) %>% paste0(collapse = \", \") %>% sprintf(msg,  :    Row 1 has no values in answer columns."},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brighton Pauli. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pauli B (2023). examling: Easily Build Tests Coursework. https://examling.examLing.org, https://github.com/examLing/examling.","code":"@Manual{,   title = {examling: Easily Build Tests and Coursework},   author = {Brighton Pauli},   year = {2023},   note = {https://examling.examLing.org, https://github.com/examLing/examling}, }"},{"path":"/BRIGHTON.html","id":null,"dir":"","previous_headings":"","what":"Outline of Operations","title":"Outline of Operations","text":"Summary progress made current goals May 13, 2023.","code":""},{"path":"/BRIGHTON.html","id":"next-steps","dir":"","previous_headings":"","what":"Next Steps","title":"Outline of Operations","text":"decided next thing document already exists. way can wrap heads around left . also need teach Danny process using examling, installation exporting. programmer really like thoroughly test written far. means creating substantial tests account edge cases running . instinct make things know work code ’ve written, perhaps ’ll get good tests Danny starts writing questions. UX designer also wants see Danny creates without input. can make package inuitive? testing, also try solve GitHub issues.","code":""},{"path":"/BRIGHTON.html","id":"installation-process","dir":"","previous_headings":"","what":"Installation Process","title":"Outline of Operations","text":"package can installed using devtools.install_github. requirements package can installed way?","code":""},{"path":"/BRIGHTON.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Outline of Operations","text":"Currently, many functions documented README.md file. plan create formal documentation soon, integrated package . need example packages imitate order ensure documentation looks professional correct. meeting May 11, 2023, plan use pkgdown create documentation. https://pkgdown.r-lib.org/articles/pkgdown.html goal pkgdown make easy make elegant useful package website minimum work. can get basic website running just couple minutes:","code":"# Run once to configure package to use pkgdown usethis::use_pkgdown() # Run to build the website pkgdown::build_site()"},{"path":"/BRIGHTON.html","id":"logging","dir":"","previous_headings":"","what":"Logging","title":"Outline of Operations","text":"November 30, 2022, using logr package log actions take place generating .Rmd files whatever process user performing. High Priority * Date (automatically generated logr) * Number type question * Final count * URL imported Google Sheets document * “Quick summary” question, ID * many dynamic versions Lower Priority * Location temporary .xlsx file Google Sheets","code":""},{"path":"/BRIGHTON.html","id":"importing","dir":"","previous_headings":"","what":"Importing","title":"Outline of Operations","text":"lot importing stuff already written decently documented. still need write step--step instructions starting spreadsheet ending folder .Rmd files. also need write exact requirements restrictions, like allowed csv headers. can currently import … * Dataframes * .csv files * .xslx files * Google Sheets ’d like import … * Canvas * QTI/rtf","code":""},{"path":"/BRIGHTON.html","id":"canvas","dir":"","previous_headings":"","what":"Canvas","title":"Outline of Operations","text":"big thing importing exporting Canvas frustrating. original creators exams package go try figure things , pretty minimal success. order test package’s interactions Canvas future, can use testing Canvas class, Danny “TA”s .","code":""},{"path":"/BRIGHTON.html","id":"ids","dir":"","previous_headings":"","what":"IDs","title":"Outline of Operations","text":"Identifiers file names generated .Rmd files saved, csv2rmd.r. Currently, identifiers generated using create_id(), randomly generates number attaches given category subcategory. unlikely may , entirely possible function generate ID two distinct questions category subcategory. current plan solve listed Todoist https://todoist.com/app/search/id/task/6034389990. can pull saved questions far, can ensure unique ID , fact, unique. also listed issue Github https://github.com/examLing/examling/issues/2. Ids created using classroom environment ensure unique without , like, 7-digit long identifying numbers. established location save .Rmd files, can also search .Rmd files ensure don’t repeat ID. going require little thought can distinguish creating new question replacing old one. potential solution stop generating IDs just user provide instead, giving informative warnings errors duplicates found.","code":""},{"path":"/HOWTO.html","id":null,"dir":"","previous_headings":"","what":"1 Install","title":"1 Install","text":"examling development, recently pushed version can installed GitHub using devtools library. order gain access package’s source code, ’ll need GitHub account permission project administrator access repository. haven’t worked git , check https://docs.github.com/en/get-started/getting-started--git. git account, need create authentication token R can access repositories. just means signing get special password GitHub R can use . start, input GitHub username email associated account respective strings , run code cell. open browser ask sign GitHub bringing page titled “New personal access token”. Start providing reason token’s creation “Note” section. can also change expiration date token, though default value 30 days works perfectly well.  need change selections “Select scopes” section. “repo” section enabled default need give R access .  Now, click green “Create Token” bottom page. presented page looks like following, code starts ghp_. (Note code censored example image.)  Copy code , optionally, save somewhere secure use later. Paste text says <AUTH CODE > chunk . sure delete < >; authentication code within quotes. run code chunk install examling. check examling installed properly, run following code chunk make sure errors.","code":"install.packages(\"devtools\") usethis::use_git_config(user.name = \"<USERNAME>\",                         user.email = \"<YOUR>@<EMAIL>.com\") usethis::create_github_token() library(devtools) install_github(\"examLing/examling\", ref = \"main\",                auth_token = \"<AUTH CODE HERE>\") library(examling)"},{"path":"/HOWTO.html","id":"id_2-generate-rmd-files-from-google-sheets","dir":"","previous_headings":"","what":"2 Generate .Rmd Files from Google Sheets","title":"1 Install","text":"examling allows conveniently write test questions Google Sheets document import .Rmd files use exams package.","code":""},{"path":"/HOWTO.html","id":"id_21-build-the-sheet","dir":"","previous_headings":"","what":"2.1 Build the Sheet","title":"1 Install","text":"Create new Google Sheets document, fill row 1 following headers: ID Question Type Image Ans1, Ans2, Ans3…* Correct Category SubCat  * may use number Ans columns. Simply label accordingly. adding text, click light gray box top right corner select entire spreadsheet.  , set entire Sheet plain text. , Press button says “123” (left font-selection box) choose “Plain Text”.  ensures numbers input saved exactly write . add question, start putting unique identifier ID column. multiple rows identifier, associated (See Design Dynamic Questions). , write main body text question Question column. examling uses R-markdown format text, can, example, bold text typing “**” side.  Type column dictates kind answer expected question. three main choices: schoice - single correct answer, options wrong. mchoice - number correct answers, student graded many select without choosing incorrect answers. string - provided answers student instead given area input text. student’s response must exactly match correct answer receive credit. Type “string”, provide answers student need choose columns starting Ans, including correct incorrect options. need use Ans columns.  Correct column used differently depending Type. schoice questions, Correct value index corresponding correct answer. example provided, correct answer “Giraffe”, column Ans3. Therefore, Correct column say “3”. mchoice questions, Correct value comma-separated list correct indices. example, correct answers lie columns Ans1 Ans3, cell say “1, 3”. string questions, Correct value exact correct answer. example, question “color chlorophyll?”, cell say “green”.  Category SubCat columns used organization naming files. values short, informative names help keep track topics. Questions Category values appear tests.  Now, add another row every question want generate .Rmd file .  Give Sheet title , optionally, click “View” -> “Freeze” -> “1 row” keep header row visible scrolling.","code":""},{"path":"/HOWTO.html","id":"id_22-import-into-r","dir":"","previous_headings":"","what":"2.2 Import into R","title":"1 Install","text":"Start loading examling package. Use setwd place working directory want folder .Rmd files saved. navigate back spreadsheet containing questions copy entire URL (“https://docs.google.com/spreadsheets/d/…”). Paste URL first argument url examling function google2rmd. Set second argument output_dir folder want store resulting .Rmd files . loading questions sheet spreadsheet first, ’ll need specify index sheet google2rmd. example, ’re “Sheet2”, include sheet = 2.  NOTE: index depends order sheets, names. following screenshot, “Sheet3” placed “Sheet2”. , “Sheet3” index 2, “Sheet2” index 3.  run function, asked grant access Google account. select “Send browser new auth process.” R terminal. Even “pre-authorized accounts” available, aren’t reliable, stick logging time start fresh R session. sent browser, select account spreadsheet stored sign . presented following screen.  Check box labeled “See, edit, create, delete Google Drive files.” press “Continue” button. process done! Assuming issues spreadsheet, R load proper Google Sheets document save .Rmd files correct folder. examling also creates log file details import process, can found logs/log folder name {DATE}_{TIME}.log. error, ’ll also see file called {DATE}_{TIME}.msg folder.","code":"library(examling) google2rmd(    \"<URL>\",    \"Example\" ) google2rmd(    \"<URL>\",    \"Example\",    sheet = 2 )"},{"path":"/HOWTO.html","id":"id_23-extra-columns","dir":"","previous_headings":"","what":"2.3 Extra Columns","title":"1 Install","text":"Section 2.1 demonstrates columns required import questions, columns allowed. columns can added provide additional functionality, like “Image” “NCorrect” columns. extra columns match one names added question’s metadata. makes easy record searchable tags, warnings, credits. 23 May, 2023, extra metadata tags appear YAML header respective .Rmd file. Later, added exams-specific “Meta-information” footer.","code":""},{"path":"/HOWTO.html","id":"image","dir":"","previous_headings":"2.3 Extra Columns","what":"Image","title":"1 Install","text":"“Image” column deserves section. See Adding Images.","code":""},{"path":"/HOWTO.html","id":"nchoices","dir":"","previous_headings":"2.3 Extra Columns","what":"NChoices","title":"1 Install","text":"schoice mchoice questions, may options choose want appear test. example, question “letter vowel?”, choices 26 letters English alphabet. case, can add column titled “NChoices” use specify many options given tests. guaranteed least one options correct answer.","code":""},{"path":"/HOWTO.html","id":"ncorrect","dir":"","previous_headings":"2.3 Extra Columns","what":"NCorrect","title":"1 Install","text":"similar vein NChoices column “NCorrect” column, specifies many options correct answers. column can used mchoice questions. value column greater total number choices, lowered number choices. example, set NCorrect 5 question 4 possible options, NCorrect value set 4. value provided column, mchoice question choose random number 1 total number options.","code":""},{"path":"/HOWTO.html","id":"id_24-add-images","dir":"","previous_headings":"","what":"2.4 Add Images","title":"1 Install","text":"easily add images questions using Google Sheets, start inserting column titled “Image”.  Select cell column corresponding question want add image . , top menu, select “Insert” > “Image” > “Insert image cell”.  , either upload provide link image want attach, per Google’s instructions. (example, ’ll just use screenshot function wrote ’m lazy get good image tree.) image large, shrunk fit cell. affect appear exams.  Repeat image. NEXT PART IMPORTANT. way R know cells contain images. Using “Insert image cell” viewing convenience. Behind scenes, cell still appears empty! order communicate examling questions attached images, need type “0” “Image” column every question image.  ’ve done , set import questions using google2rmd() normal. images downloaded saved img folder directory questions, , long properly added “0”s, appear correct questions. (case ’re curious image attached , ’s just super simple formula determining whether number even odd.)","code":""},{"path":"/HOWTO.html","id":"id_3-design-dynamic-questions","dir":"","previous_headings":"","what":"3 Design Dynamic Questions","title":"1 Install","text":"Todo","code":""},{"path":"/HOWTO.html","id":"a1-spreadsheet-validation","dir":"","previous_headings":"","what":"A1 Spreadsheet Validation","title":"1 Install","text":"importing questions spreadsheet, like one created Google Sheets Excel, examling goes list checks validate sheet. check fails, function throw error.","code":""},{"path":"/HOWTO.html","id":"dataframe-has-no-values","dir":"","previous_headings":"","what":"“Dataframe has no values.”","title":"1 Install","text":"Example: error occurs try import data spreadsheet header. Double check pasted correct url selected proper sheet index. Also, ’s good note images don’t count cell values.","code":"Error in examling:::validate_df(df) :    Dataframe has no values. Did you select the wrong sheet?"},{"path":"/HOWTO.html","id":"error-in-if-nrowdf--0","dir":"","previous_headings":"","what":"“Error in if (nrow(df) == 0)…”","title":"1 Install","text":"Example: error occurs try import data spreadsheet values (even header). Since data sheet, R fails load . Double check ’re importing correct URL sheet.","code":"Error in if (nrow(df) == 0) stop(\"Dataframe has no values. Did you select the wrong sheet?\") :    argument is of length zero In addition: Warning message: No data found on worksheet."},{"path":"/HOWTO.html","id":"missing-columns-","dir":"","previous_headings":"","what":"“Missing columns: …”","title":"1 Install","text":"Example:  header missing least one required columns: Question Type Correct Category Subcat Add listed headers first row sheet, check Build Sheet learn use columns. Side note: Interestingly, headers don’t need first row; just need first non-empty row sheet. can many empty rows ’d like.","code":"Error in examling:::validate_df(df) : Missing columns: type"},{"path":"/HOWTO.html","id":"no-answer-columns-found","dir":"","previous_headings":"","what":"“No answer columns found”","title":"1 Install","text":"Example:  examling requires least ONE column format “Ans#” sheet, throw error. moment, examling throws error even questions string type, meaning columns empty. case, just add single “Ans1” column leave blank.","code":"Error in examling:::validate_df(df) : No answer columns found"},{"path":"/HOWTO.html","id":"no-values-in-answer-columns","dir":"","previous_headings":"","what":"“No values in answer columns.”","title":"1 Install","text":"Example:  error thrown schoice mchoice question answers choose . fix , either: Add answers row. Set “Type” string.","code":"Error in which(na_rows & !sr_rows) %>% paste0(collapse = \", \") %>% sprintf(msg,  :    Row 1 has no values in answer columns."},{"path":"/index.html","id":"examling","dir":"","previous_headings":"","what":"Easily Build Tests and Coursework","title":"Easily Build Tests and Coursework","text":"examling extension r/exams package provides convenient function importing questions external sources manipulating information within dynamic questions. information, go https://examling.github.io/examling/.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Easily Build Tests and Coursework","text":"examling development, recently pushed version can installed GitHub using devtools library.","code":"install.packages(\"devtools\")  library(devtools) install_github(\"https://github.com/examLing/examling\") library(examling)"},{"path":"/index.html","id":"csv-column-headers","dir":"","previous_headings":"","what":"CSV Column Headers","title":"Easily Build Tests and Coursework","text":"Question: question text Type: One ‘schoice’, ‘mchoice’, ‘string’ Image: image file’s name (inserted image Excel/Google Sheets) Ans#: number answer columns, preferably labeled numbers Correct: index (letter corresponding ) correct answer Category: Question’s category SubCat: Questions’s subcategory","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 examling authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/add_from_pool.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a question from a pool of answers. — add_from_pool","title":"Add a question from a pool of answers. — add_from_pool","text":"Add multiple-choice single-choice question dataframe, drawing answers pool possibilities validation /transforming inputs.","code":""},{"path":"/reference/add_from_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a question from a pool of answers. — add_from_pool","text":"","code":"add_from_pool(   question,   image = NA,   explanation = NA,   answer_pool = NA,   correct_ids = NA,   keywords = NA,   df = NA )"},{"path":"/reference/add_from_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a question from a pool of answers. — add_from_pool","text":"question Question text. image Image filename (optional). explanation Explanation correct answer (optional). answer_pool Tibble answer choices, id text columns. correct_ids Numeric vector correct answer ids, answer_pool. df Dataframe add question .","code":""},{"path":"/reference/add_from_pool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a question from a pool of answers. — add_from_pool","text":"provided dataframe df, additional row. dataframe provided, new one created.","code":""},{"path":"/reference/add_from_pool.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Add a question from a pool of answers. — add_from_pool","text":"Brighton Pauli, 2022.","code":""},{"path":[]},{"path":"/reference/add_from_pool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a question from a pool of answers. — add_from_pool","text":"","code":"df <- examling::build_question_df() df <- add_from_pool(  question = \"What color is a male cardinal?\",  answer_pool = data.frame(text=c(\"Red\", \"Green\", \"Blue\"), id = seq_len(3)),  correct_ids = c(1),  df = df ) df #>                         question image correct   incorrect explanation #> 1 What color is a male cardinal?    NA     Red Green, Blue          NA"},{"path":"/reference/add_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a question to a dataframe. — add_question","title":"Add a question to a dataframe. — add_question","text":"Add multiple-choice single-choice question dataframe, validating /transforming inputs.","code":""},{"path":"/reference/add_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a question to a dataframe. — add_question","text":"","code":"add_question(   question,   image = NA,   explanation = NA,   correct = NA,   incorrect = NA,   keywords = NA,   df = NA )"},{"path":"/reference/add_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a question to a dataframe. — add_question","text":"question Question text image Image filename (optional) explanation Explanation correct answer (optional) correct Vector possible correct answers incorrect Vector possible incorrect answers keywords Vector strings insert question text df Dataframe add question ","code":""},{"path":"/reference/add_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a question to a dataframe. — add_question","text":"provided dataframe df, additional row. dataframe provided, new one created.","code":""},{"path":"/reference/add_question.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Add a question to a dataframe. — add_question","text":"Brighton Pauli, 2022.","code":""},{"path":"/reference/add_question.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a question to a dataframe. — add_question","text":"","code":"df <- examling::build_question_df() df <- add_question(  question = \"What color is a male cardinal?\",  correct = c(\"Red\"),  incorrect = c(\"Green\", \"Blue\"),  df = df ) df #>                         question image correct   incorrect explanation #> 1 What color is a male cardinal?    NA     Red Green, Blue          NA"},{"path":"/reference/add_string_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a string question to a dataframe. — add_string_question","title":"Add a string question to a dataframe. — add_string_question","text":"Add string-type question dataframe, validating /transforming inputs.","code":""},{"path":"/reference/add_string_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a string question to a dataframe. — add_string_question","text":"","code":"add_string_question(   question,   image = NA,   explanation = NA,   correct = NA,   keywords = NA,   df = NA )"},{"path":"/reference/add_string_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a string question to a dataframe. — add_string_question","text":"question Question text image Image filename (optional) explanation Explanation correct answer (optional) correct Correct answer, string keywords Vector strings insert question text df Dataframe add question ","code":""},{"path":"/reference/add_string_question.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a string question to a dataframe. — add_string_question","text":"provided dataframe df, additional row. dataframe provided, new one created.","code":""},{"path":"/reference/add_string_question.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Add a string question to a dataframe. — add_string_question","text":"Brighton Pauli, 2023","code":""},{"path":[]},{"path":"/reference/add_string_question.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a string question to a dataframe. — add_string_question","text":"","code":"df <- examling::build_question_df() df <- add_string_question(  question = \"What color is a male cardinal?\",  correct = \"Red\",  df = df ) df #>                         question image correct incorrect explanation #> 1 What color is a male cardinal?    NA     Red        NA          NA  df <- examling::build_question_df() df <- add_string_question(  question = \"What color is a %1?\",  correct = \"Red\",  keywords = \"male cardinal\",  df = df ) df #>                         question image correct incorrect explanation #> 1 What color is a male cardinal?    NA     Red        NA          NA"},{"path":"/reference/build_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose correct and incorrect answers. — build_choices","title":"Choose correct and incorrect answers. — build_choices","text":"Choose correct incorrect answers format r/exams files.","code":""},{"path":"/reference/build_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose correct and incorrect answers. — build_choices","text":"","code":"build_choices(question_row, nchoices, ncorrect = 1)"},{"path":"/reference/build_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose correct and incorrect answers. — build_choices","text":"question_row Single row data. See build_question_df(). nchoices Total number choices give students. ncorrect Number choices correct (default: 1). 0 <= ncorrect <= nchoices","code":""},{"path":"/reference/build_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose correct and incorrect answers. — build_choices","text":"Named list two string values: answerlist: Bulleted list possible choices. exsolution: Binary representation correct answer(s).","code":""},{"path":"/reference/build_choices.html","id":"n-correct","dir":"Reference","previous_headings":"","what":"N Correct","title":"Choose correct and incorrect answers. — build_choices","text":"default, ncorrect set 1. warning thrown ncorrect greater nchoices. random number correct answers, set ncorrect NA, \"random\", vector two numbers. NA random set ncorrect random number 1 ncorrect, inclusively. Providing vector two numbers set ncorrect random number two numbers, inclusively.","code":""},{"path":"/reference/build_choices.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Choose correct and incorrect answers. — build_choices","text":"Brighton Pauli, 2023","code":""},{"path":[]},{"path":"/reference/build_question_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a dataframe for questions. — build_question_df","title":"Build a dataframe for questions. — build_question_df","text":"Build question dataframe, question, image, correct, incorrect, explanation columns.","code":""},{"path":"/reference/build_question_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a dataframe for questions. — build_question_df","text":"","code":"build_question_df()"},{"path":"/reference/build_question_df.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Build a dataframe for questions. — build_question_df","text":"Brighton Pauli, 2022.","code":""},{"path":"/reference/bulleted_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Form a bulleted list from strings. — bulleted_list","title":"Form a bulleted list from strings. — bulleted_list","text":"Concatenate string items form bulleted list.","code":""},{"path":"/reference/bulleted_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Form a bulleted list from strings. — bulleted_list","text":"","code":"bulleted_list(x)"},{"path":"/reference/bulleted_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Form a bulleted list from strings. — bulleted_list","text":"x vector strings","code":""},{"path":"/reference/bulleted_list.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Form a bulleted list from strings. — bulleted_list","text":"Brighton Pauli, 2022.","code":""},{"path":"/reference/bulleted_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Form a bulleted list from strings. — bulleted_list","text":"","code":"bulleted_list(c(\"a\", \"b\", \"c\")) #> [1] \"* a\\n* b\\n* c\\n\""},{"path":"/reference/comment_out_sections_.html","id":null,"dir":"Reference","previous_headings":"","what":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","title":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","text":"Help remove sections pre-created QTI zip file.","code":""},{"path":"/reference/comment_out_sections_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","text":"","code":"comment_out_sections_(qti_file, temp_folder, out_file = NULL)"},{"path":"/reference/comment_out_sections_.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","text":"Brighton Pauli, 2022","code":""},{"path":"/reference/create_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random id. — create_id","title":"Create a random id. — create_id","text":"Create ID format \"[category][subcat][random number]\"","code":""},{"path":"/reference/create_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random id. — create_id","text":"","code":"create_id(category, subcat = NA)"},{"path":"/reference/create_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random id. — create_id","text":"category category question. subcat subcategory question (optional).","code":""},{"path":"/reference/create_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random id. — create_id","text":"string form \"[category][subcat][random number]\".","code":""},{"path":"/reference/create_id.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Create a random id. — create_id","text":"Brighton Pauli, 2022.","code":""},{"path":"/reference/create_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Start a new .Rmd file from a template. — create_rmd","title":"Start a new .Rmd file from a template. — create_rmd","text":"Create .Rmd file specified location basic layout provided, ready user create new question.","code":""},{"path":"/reference/create_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start a new .Rmd file from a template. — create_rmd","text":"","code":"create_rmd(save_as, question_type, dynamic_type = \"none\", open = FALSE)"},{"path":"/reference/create_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start a new .Rmd file from a template. — create_rmd","text":"save_as save created file. question_type kind question created. : \"schoice\" \"mchoice\" \"string\" dynamic_type make question dynamic. Default \"none\". : \"none\" - code blocks used random question generation. Normal. \"variations\" - Create dataframe contains full variations question. \"keywords\" - Like \"variations\", key words question changed variations, well answers. \"dynamic\" - (\"schoice\" \"mchoice\" ). Start tribble potential answers draw variation. answers tribble used incorrect choices. \"pooled\" - (\"schoice\" \"mchoice\" ). Single question answer choices randomly selected. open Whether open file upon creation. Default: false.","code":""},{"path":"/reference/create_rmd.html","id":"examples-for-dynamic-types","dir":"Reference","previous_headings":"","what":"Examples for Dynamic Types","title":"Start a new .Rmd file from a template. — create_rmd","text":"\"none\" - Q: \"developed famous equation e = mc^2?\", : \"Albert Einstein\". \"variations\" - Different questions referring properties helium atoms still kept file. Q: \"atomic mass helium?\", : \"4\". Q: \"state matter helium\", : \"Gas\". \"keywords\" - Questions asking atomic masses different elements. Q: \"atomic mass HELIUM?\", : \"4\". Q: \"atomic mass OXYGEN?\", : \"16\". \"dynamic\" - Questions asking elements belong different columns. Q: \"element(s) can found column 18?\", : \"\", \"Ne\", \"Ar\", \"Kr\", \"Xe\", \"Rn\", \"Og\". Q: \"element(s) can found column 16?\", : \"O\", \"S\", \"Se\", \"Te\", \"Po\", \"Lv\". \"pooled\" - Q: \"element largest atomic radius?\", : \"Francium\" (incorrect answers can drawn pool containing elements).","code":""},{"path":"/reference/create_rmd.html","id":"string-questions","dir":"Reference","previous_headings":"","what":"string Questions","title":"Start a new .Rmd file from a template. — create_rmd","text":"question_type \"string\", dynamic_type can \"none\", \"keywords\", \"variations\".","code":""},{"path":"/reference/create_rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Start a new .Rmd file from a template. — create_rmd","text":"Brighton Pauli, 2023","code":""},{"path":"/reference/csv2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Import questions from a csv file. — csv2rmd","title":"Import questions from a csv file. — csv2rmd","text":"Convert csv file questions r/exams-style Rmd files.","code":""},{"path":"/reference/csv2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import questions from a csv file. — csv2rmd","text":"","code":"csv2rmd(x, output_dir, ...)"},{"path":"/reference/csv2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import questions from a csv file. — csv2rmd","text":"x Filepath csv file. output_dir Directory write Rmd files . ... Additional arguments read.csv.","code":""},{"path":"/reference/csv2rmd.html","id":"csv-format","dir":"Reference","previous_headings":"","what":"csv format","title":"Import questions from a csv file. — csv2rmd","text":"csv file following columns: Question: question text Type: \"schoice\", \"mchoice\", \"string\" Image: image file's name Ans1: answer text first answer Ans2: answer text second answer Ans3: answer text third answer Ans4: answer text fourth answer Ans5: answer text fifth answer Correct: correct answer number (1-5) Category: category question SubCat: subcategory question","code":""},{"path":"/reference/csv2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Import questions from a csv file. — csv2rmd","text":"Brighton Pauli, 2022.","code":""},{"path":[]},{"path":"/reference/df2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Import questions from an R dataframe. — df2rmd","title":"Import questions from an R dataframe. — df2rmd","text":"Convert dataframe questions r/exams-style Rmd files.","code":""},{"path":"/reference/df2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import questions from an R dataframe. — df2rmd","text":"","code":"df2rmd(df, output_dir)"},{"path":"/reference/df2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import questions from an R dataframe. — df2rmd","text":"df Dataframe questions. output_dir Directory write Rmd files .","code":""},{"path":"/reference/df2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Import questions from an R dataframe. — df2rmd","text":"Inspired Achim's csv2rmd function. Brighton Pauli, 2022.","code":""},{"path":"/reference/drop_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all sections from a pre-created QTI zip file. — drop_sections","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"Remove sections pre-created QTI zip file.","code":""},{"path":"/reference/drop_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"","code":"drop_sections(qti_file, out_file = NULL)"},{"path":"/reference/drop_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"qti_file .zip file edit out_file .zip file write .","code":""},{"path":"/reference/drop_sections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"out_file given, default qti_file, _nosect appended extension. out_file given, must end extension .zip.","code":""},{"path":"/reference/drop_sections.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"Brighton Pauli, 2022","code":""},{"path":"/reference/dyna_question_segment_.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single add_from_pool call for this row — dyna_question_segment_","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"Generate single add_from_pool call row","code":""},{"path":"/reference/dyna_question_segment_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"","code":"dyna_question_segment_(index, df, meta_cols)"},{"path":"/reference/dyna_question_segment_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"row \"schoice\" \"mchoice\" row validated rexamsll dataframe","code":""},{"path":"/reference/dyna_question_segment_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"String calls add_from_pool","code":""},{"path":[]},{"path":"/reference/dyna_string_question_segment_.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single add_string_question call for this row — dyna_string_question_segment_","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"Generate single add_string_question call row","code":""},{"path":"/reference/dyna_string_question_segment_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"","code":"dyna_string_question_segment_(index, df, meta_cols)"},{"path":"/reference/dyna_string_question_segment_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"index index \"string\" row df df validated rexamsll dataframe","code":""},{"path":"/reference/dyna_string_question_segment_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"String calls add_string_question","code":""},{"path":[]},{"path":"/reference/end_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for logr::log_close. — end_logs","title":"Wrapper for logr::log_close. — end_logs","text":"Run function stop generating logs functions. can restart logs using start_logs().","code":""},{"path":"/reference/end_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for logr::log_close. — end_logs","text":"","code":"end_logs()"},{"path":"/reference/exams2js.html","id":null,"dir":"Reference","previous_headings":"","what":"Test your quiz in the browser. — exams2js","title":"Test your quiz in the browser. — exams2js","text":"Create simple Javascript-powered quiz testing purposes.","code":""},{"path":"/reference/exams2js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test your quiz in the browser. — exams2js","text":"","code":"exams2js(   file,   n = 1L,   nsamp = NULL,   dir = \".\",   template = NULL,   name = NULL,   quiet = TRUE,   edir = NULL,   tdir = NULL,   sdir = NULL,   verbose = FALSE,   question = \"<h4>Question<\/h4>\",   solution = \"<h4>Solution<\/h4>\",   mathjax = NULL,   resolution = 100,   width = 4,   height = 4,   svg = FALSE,   encoding = \"\",   envir = NULL,   converter = NULL,   seed = NULL,   ... )"},{"path":"/reference/exams2js.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Test your quiz in the browser. — exams2js","text":"Modified exams2html, Achim.","code":""},{"path":"/reference/find_answer_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all answer columns in a dataframe. — find_answer_columns","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"answer column column header starts \"ans\" \"Ans\".","code":""},{"path":"/reference/find_answer_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"","code":"find_answer_columns(df)"},{"path":"/reference/find_answer_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"df Dataframe search.","code":""},{"path":"/reference/find_answer_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"Vector column indices","code":""},{"path":"/reference/find_answer_columns.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"Brighton Pauli, 2022.","code":""},{"path":"/reference/find_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for Rmds with certain metadata. — find_questions","title":"Search for Rmds with certain metadata. — find_questions","text":"Locate exercise files match metadata filters.","code":""},{"path":"/reference/find_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for Rmds with certain metadata. — find_questions","text":"","code":"find_questions(dir, ..., pattern = \".*\")"},{"path":"/reference/find_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for Rmds with certain metadata. — find_questions","text":"dir Directory containing exercise .Rmd files search . ... Expressions return logical value. See filter. pattern Optional regular expression filter file names","code":""},{"path":"/reference/find_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for Rmds with certain metadata. — find_questions","text":"Dataframe columns filename qvariation.","code":""},{"path":"/reference/find_questions.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Search for Rmds with certain metadata. — find_questions","text":"Brighton Pauli, 2023","code":""},{"path":"/reference/get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a tibble of metadata. — get_metadata","title":"Load a tibble of metadata. — get_metadata","text":"Retrieve r/exams-specific metadata question's .Rmd file.","code":""},{"path":"/reference/get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a tibble of metadata. — get_metadata","text":"","code":"get_metadata(filename = \"\", directory = \"\")"},{"path":"/reference/get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a tibble of metadata. — get_metadata","text":"filename Name .Rmd file. extensions ignored. directory Optional. Folder file can found .","code":""},{"path":"/reference/get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a tibble of metadata. — get_metadata","text":"Tibble metadata values, named appropriately, filename qvariation columns.","code":""},{"path":"/reference/get_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load a tibble of metadata. — get_metadata","text":"filename left blank, file explorer window opened.","code":""},{"path":"/reference/get_metadata.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Load a tibble of metadata. — get_metadata","text":"Brighton Pauli, 2023","code":""},{"path":"/reference/google2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Import questions from Google Sheets. — google2rmd","title":"Import questions from Google Sheets. — google2rmd","text":"Download Google Sheet questions convert Rmd files.","code":""},{"path":"/reference/google2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import questions from Google Sheets. — google2rmd","text":"","code":"google2rmd(url, output_dir, sheet = 1, log_file = NA)"},{"path":"/reference/google2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import questions from Google Sheets. — google2rmd","text":"url URL Google Sheet. output_dir Directory write Rmd files . sheet Index name sheet contains questions. log_file Directory write log files .","code":""},{"path":"/reference/google2rmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import questions from Google Sheets. — google2rmd","text":"image imported Sheet saved 'img' directory name question's generated ID.","code":""},{"path":"/reference/google2rmd.html","id":"sheet-format","dir":"Reference","previous_headings":"","what":"Sheet format","title":"Import questions from Google Sheets. — google2rmd","text":"xlsx file following columns: Question: question text Image: image file Type: \"schoice\", \"mchoice\", \"string\" Ans1: answer text first answer Ans2: answer text second answer Ans3: answer text third answer Ans4: answer text fourth answer Ans5: answer text fifth answer Correct: correct answer number (1-5) Category: category question SubCat: subcategory question","code":""},{"path":"/reference/google2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Import questions from Google Sheets. — google2rmd","text":"Brighton Pauli, 2022.","code":""},{"path":[]},{"path":"/reference/img2txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize images in logs. — img2txt","title":"Visualize images in logs. — img2txt","text":"Convert image rough text representation.","code":""},{"path":"/reference/img2txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize images in logs. — img2txt","text":"","code":"img2txt(imgpath, h = 10)"},{"path":"/reference/img2txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize images in logs. — img2txt","text":"imgpath File path image. h Height result image, number lines. (Default 10)","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/reformat_string_.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix strings for use in dynamic R code chunks — reformat_string_","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"Fix strings use dynamic R code chunks","code":""},{"path":"/reference/reformat_string_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"","code":"reformat_string_(s)"},{"path":"/reference/reformat_string_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"s String reformatted","code":""},{"path":"/reference/reformat_string_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"String can used R code","code":""},{"path":"/reference/start_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for logr::log_open. — start_logs","title":"Wrapper for logr::log_open. — start_logs","text":"Create log file, needed, run logr::log_open.previously runend_logs()`, restart logs function calls.","code":""},{"path":"/reference/start_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for logr::log_open. — start_logs","text":"","code":"start_logs(filepath = NA)"},{"path":"/reference/start_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for logr::log_open. — start_logs","text":"filepath Path write logs .","code":""},{"path":"/reference/start_logs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wrapper for logr::log_open. — start_logs","text":"default, path logs \"./logs/yyyymmdd_hhmmsss.log\"","code":""},{"path":"/reference/validate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a dataframe for issues. — validate_df","title":"Check a dataframe for issues. — validate_df","text":"Ensure dataframe conforms examling standards, stopping otherwise.","code":""},{"path":"/reference/validate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a dataframe for issues. — validate_df","text":"","code":"validate_df(df)"},{"path":"/reference/validate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a dataframe for issues. — validate_df","text":"df Dataframe validate.","code":""},{"path":"/reference/validate_df.html","id":"requirements","dir":"Reference","previous_headings":"","what":"Requirements","title":"Check a dataframe for issues. — validate_df","text":"dataframe must following columns: Question Type Correct Category Previously, Image column also required. Now, Image column, empty one added. columns must plain text. must least one answer column. common errors, see following vignette: vignette(\"spreadsheet-validation\", package = \"examling\")","code":""},{"path":"/reference/validate_df.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Check a dataframe for issues. — validate_df","text":"Brighton Pauli, 2022.","code":""},{"path":"/reference/xlsx2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Import questions from an Excel sheet. — xlsx2rmd","title":"Import questions from an Excel sheet. — xlsx2rmd","text":"Convert xlsx spreadsheet questions r/exams-style Rmd files.","code":""},{"path":"/reference/xlsx2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import questions from an Excel sheet. — xlsx2rmd","text":"","code":"xlsx2rmd(x, output_dir, ..., sheet = 1, log_file = NA, url = NA)"},{"path":"/reference/xlsx2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import questions from an Excel sheet. — xlsx2rmd","text":"x Filepath xlsx file. output_dir Directory write Rmd files . ... Additional arguments openxlsx::loadWorkbook. sheet Index name sheet contains questions. log_file Directory write log files . url internal use .","code":""},{"path":"/reference/xlsx2rmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import questions from an Excel sheet. — xlsx2rmd","text":"image imported xlsx file saved 'img' directory name question's generated ID.","code":""},{"path":"/reference/xlsx2rmd.html","id":"xlsx-format","dir":"Reference","previous_headings":"","what":"xlsx format","title":"Import questions from an Excel sheet. — xlsx2rmd","text":"xlsx file following columns: Question: question text Image: image file Type: \"schoice\", \"mchoice\", \"string\" Ans1: answer text first answer Ans2: answer text second answer Ans3: answer text third answer Ans4: answer text fourth answer Ans5: answer text fifth answer Correct: correct answer number (1-5) Category: category question SubCat: subcategory question","code":""},{"path":"/reference/xlsx2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Import questions from an Excel sheet. — xlsx2rmd","text":"Brighton Pauli, 2022.","code":""},{"path":[]},{"path":"/STYLEGUIDE.html","id":null,"dir":"","previous_headings":"","what":"Style Guide","title":"Style Guide","text":"style guide standardizes tidies code found R directory package. rules set applied function, exported otherwise, examling package. style guide apply R/templates.R. guide loosely based style guide supplied Advanced R, http://adv-r..co.nz/Style.html, turn built upon Google’s R style guide.","code":""},{"path":[]},{"path":"/STYLEGUIDE.html","id":"general-naming-conventions","dir":"","previous_headings":"Naming","what":"General Naming Conventions","title":"Style Guide","text":"Variable, file, function names lowercase. Separate words names underscores (create_id.R) number “2” represent exams-style conversion (exams2js.R). utils-pipe.R exception rule.","code":""},{"path":"/STYLEGUIDE.html","id":"variables","dir":"","previous_headings":"Naming","what":"Variables","title":"Style Guide","text":"Avoid generic variable names df res. Add one two words describe intentions variables, like df -> df_dynamic, substitute entirely like res -> row. reader knows variable result appears end function, need specify. However, df x acceptable generic parameter names.","code":""},{"path":"/STYLEGUIDE.html","id":"helper-functions","dir":"","previous_headings":"Naming","what":"Helper Functions","title":"Style Guide","text":"Helper functions functions used examling functions meant directly called user. functions exported usually share name file appear . Helper functions end single extra underscore end mark purely internal functions. Helper functions just called <function-name>_helper_; give functions short, descriptive names say meant used.","code":"# Good add_four <- function(a) {     total <- add_(a, 4)     total }  add_ <- function(a, b) {     total <- a + b     total }  # Bad add_four_helper_ <- function(a, b) {     ... }  ## Assuming \"add\" is not exported add <- function(a, b) {     ... }"},{"path":"/STYLEGUIDE.html","id":"file-names","dir":"","previous_headings":"Naming","what":"File Names","title":"Style Guide","text":"file names end .R extension, opposed lowercase .r extension. file’s name match primary function found file.","code":""},{"path":[]},{"path":"/STYLEGUIDE.html","id":"line-width","dir":"","previous_headings":"Syntax","what":"Line Width","title":"Style Guide","text":"lines fit within 80 characters. exceptions lines particularly long strings shortened. function definition longer 80 characters, give parameter line, first parameter sharing line function definition. closing parentheses starting curly bracket go line, indentation level equal function definition. allows editor properly assess indentation level function content without author needing press backspace repeatedly. function call long, arguments come first line, one level indentation greater function name. allows quick changes first line without needing update every argument’s spacing. closing parentheses still appear line. argument receive line cases. exception function paste (paste0), many arguments put line possible. Another exception tryCatch, , first argument code block surrounded curly braces, first curly brace go line tryCatch. code block still indented curly brace went line. , even better, explicitly name first argument expr.","code":"# Good do_thing <- function(parameter1,                      parameter2 = 2,                      parameter3 = 3,                      ...,                      parameter4 = 4 ) {     <code content> }  resulting_thing <- do_thing(     \"This is a very long string that takes up way too much space, but there's no way around it.\",     2,     3,     \"dots\",     4 )  together_string <- paste(c(     \"This\", \"is\", \"a\", \"very\", \"long\", \"string\", \"that\", \"takes\", \"up\", \"way\",     \"too\", \"much\", \"space,\", \"but\", \"there's\", \"no\", \"way\", \"around\", \"it.\" ), collapse = \" \")  attempted_thing <- tryCatch({         x %>%             difficult_thing() %>%             second_thing()     },     error = ... )  # Better  attempted_thing <- tryCatch(     expr = {         x %>%             difficult_thing() %>%             second_thing()     },     error = ... )  # Bad do_thing <- function(parameter1, parameter2 = 2, parameter3 = 3, ..., parameter4 = 4) {     <code content> }  do_thing <- function(parameter1,                      parameter2 = 2,                      parameter3 = 3,                      ...,                      parameter4 = 4) {                         <code content>                      }  resulting_thing <- do_thing(\"This is a very long string that takes up way too much space, but there's no way around it.\",                             2,                             3,                             \"dots\",                             4 )"},{"path":"/STYLEGUIDE.html","id":"spaces","dir":"","previous_headings":"Syntax","what":"Spaces","title":"Style Guide","text":"Place spaces around infix operators, including = operators function calls definitions, excluding operators :, ::, :::. Always add space comma, . Don’t add extra spaces align things. ’ll just re-align later.","code":"# Good average <- add(a = 4, b = 2) / 2  # Bad average<-add(a=4, b=2)/2 # Good df_all[5, ]  # Bad df_all[5,] # Good num8 <- 8 num9 <- 9 num10 <- 10  # Bad num8  <- 8 num9  <- 9 num10 <- 10"},{"path":"/STYLEGUIDE.html","id":"indentation","dir":"","previous_headings":"Syntax","what":"Indentation","title":"Style Guide","text":"indent code, use 4 spaces. VSCode, “Tab” button automatically use indentation method long indentation option bottom bar set “Spaces: 4”. Entering lower scope surrounded curly braces adds 4 spaces indentation. writing multi-line function definition, indentation parameter match first.","code":"# Good if (true) {     do_thing() }  # Bad if (true) {   do_thing() }  if (true) { do_thing() } # Good do_thing <- function(parameter1,                      parameter2 = 2,                      parameter3 = 3,                      ...,                      parameter4 = 4 ) {     <code content> }  # Bad do_thing <- function(parameter1,     parameter2 = 2,     parameter3 = 3,     ...,     parameter4 = 4 ) {     <code content> }"},{"path":"/STYLEGUIDE.html","id":"curly-brackets","dir":"","previous_headings":"Syntax","what":"Curly Brackets","title":"Style Guide","text":"Opening curly brackets never go lines. Conversely, closing curly brackets always go lines, unless followed else. Include curly brackets multi-line statements.","code":"# Good if (true) {     do_thing() } else {     do_other_thing() }  # Bad if (true) {     do_thing() } else {     do_other_thing() }  if (true) {     do_thing() } # Good if (true) {     do_thing() }  if (true) do_thing()  # Bad if (true)     do_thing()"},{"path":"/STYLEGUIDE.html","id":"pipes","dir":"","previous_headings":"Syntax","what":"Pipes","title":"Style Guide","text":"Use magrittr pipes (%>%) whenever variable value goes series transformations, reading function names reverse order confusing. use pipe subjective matter, avoid using one function called. use magrittr’s dot variable (.) left-hand-side first variable right-hand-side. words, use dot need . right-hand-side arguments left-hand-side, still include parentheses order emphasize right-hand-side’s status function. Pipes appear end line. following lines continue pipeline indented one starting line.","code":"# Good a <- b %>%     do_thing() %>%     add(4)  a <- b %>%     do_thing() %>%     add(4, .)  # Bad a <- b %>% do_thing() %>% add(4)  a <- b %>%     do_thing %>%     add(4)  a <- b %>%     do_thing() %>%     add(., 4)  a <- b %>%     do_thing()"},{"path":[]},{"path":"/STYLEGUIDE.html","id":"return-values","dir":"","previous_headings":"Semantics","what":"Return Values","title":"Style Guide","text":"function return value, return value must saved variable. final line function must variable, alone. big functions, add empty line final return line distinguish .","code":"# Good add <- function(a, b) {     total <- a + b     total }  # Bad add <- function(a, b) {     a + b }  add <- function(a, b, d) {     total <- add(a, b)     total + d }"},{"path":"/STYLEGUIDE.html","id":"internal-functions","dir":"","previous_headings":"Semantics","what":"Internal Functions","title":"Style Guide","text":"using examling function, even one exported, add prefix examling::. function exported, need three colons: examling:::. apply helper functions appear file.","code":"# Good res_txt <- examling:::img2txt(imgpath)  res_txt <- make_text_(x)  # Bad res_text <- img2txt(imgpath)"}]
