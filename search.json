[{"path":"https://rexamsll.examLing.org/HOWTO.html","id":null,"dir":"","previous_headings":"","what":"1 Install","title":"1 Install","text":"rexamsll development, recently pushed version can installed GitHub using devtools library. order gain access package’s source code, ’ll need GitHub account permission project administrator access repository. haven’t worked git , check https://docs.github.com/en/get-started/getting-started--git. git account, need create authentication token R can access repositories. just means signing get special password GitHub R can use . start, input GitHub username email associated account respective strings , run code cell. open browser ask sign GitHub bringing page titled “New personal access token”. Start providing reason token’s creation “Note” section. can also change expiration date token, though default value 30 days works perfectly well.  need change selections “Select scopes” section. “repo” section enabled default need give R access .  Now, click green “Create Token” bottom page. presented page looks like following, code starts ghp_. (Note code censored example image.)  Copy code , optionally, save somewhere secure use later. Paste text says <AUTH CODE > chunk . sure delete < >; authentication code within quotes. run code chunk install rexamsll. check rexamsll installed properly, run following code chunk make sure errors.","code":"install.packages(\"devtools\") usethis::use_git_config(user.name = \"<USERNAME>\",                         user.email = \"<YOUR>@<EMAIL>.com\") usethis::create_github_token() library(devtools) install_github(\"examLing/rexamsll\", ref = \"main\",                auth_token = \"<AUTH CODE HERE>\") library(rexamsll)"},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"id_2-generate-rmd-files-from-google-sheets","dir":"","previous_headings":"","what":"2 Generate .Rmd Files from Google Sheets","title":"1 Install","text":"rexamsll allows conveniently write test questions Google Sheets document import .Rmd files use exams package.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"id_21-build-the-sheet","dir":"","previous_headings":"","what":"2.1 Build the Sheet","title":"1 Install","text":"Create new Google Sheets document, fill row 1 following headers: ID Question Type Image Ans1, Ans2, Ans3…* Correct Category SubCat  * may use number Ans columns. Simply label accordingly. adding text, click light gray box top right corner select entire spreadsheet.  , set entire Sheet plain text. , Press button says “123” (left font-selection box) choose “Plain Text”.  ensures numbers input saved exactly write . add question, start putting unique identifier ID column. multiple rows identifier, associated (See Design Dynamic Questions). , write main body text question Question column. rexamsll uses R-markdown format text, can, example, bold text typing “**” side.  Type column dictates kind answer expected question. three main choices: schoice - single correct answer, options wrong. mchoice - number correct answers, student graded many select without choosing incorrect answers. string - provided answers student instead given area input text. student’s response must exactly match correct answer receive credit. Type “string”, provide answers student need choose columns starting Ans, including correct incorrect options. need use Ans columns.  Correct column used differently depending Type. schoice questions, Correct value index corresponding correct answer. example provided, correct answer “Giraffe”, column Ans3. Therefore, Correct column say “3”. mchoice questions, Correct value comma-separated list correct indices. example, correct answers lie columns Ans1 Ans3, cell say “1, 3”. string questions, Correct value exact correct answer. example, question “color chlorophyll?”, cell say “green”.  Category SubCat columns used organization naming files. values short, informative names help keep track topics. Questions Category values appear tests.  Now, add another row every question want generate .Rmd file .  Give Sheet title , optionally, click “View” -> “Freeze” -> “1 row” keep header row visible scrolling.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"id_22-import-into-r","dir":"","previous_headings":"","what":"2.2 Import into R","title":"1 Install","text":"Start loading rexamsll package. Use setwd place working directory want folder .Rmd files saved. navigate back spreadsheet containing questions copy entire URL (“https://docs.google.com/spreadsheets/d/…”). Paste URL first argument url rexamsll function google2rmd. Set second argument output_dir folder want store resulting .Rmd files . loading questions sheet spreadsheet first, ’ll need specify index sheet google2rmd. example, ’re “Sheet2”, include sheet = 2.  NOTE: index depends order sheets, names. following screenshot, “Sheet3” placed “Sheet2”. , “Sheet3” index 2, “Sheet2” index 3.  run function, asked grant access Google account. select “Send browser new auth process.” R terminal. Even “pre-authorized accounts” available, aren’t reliable, stick logging time start fresh R session. sent browser, select account spreadsheet stored sign . presented following screen.  Check box labeled “See, edit, create, delete Google Drive files.” press “Continue” button. process done! Assuming issues spreadsheet, R load proper Google Sheets document save .Rmd files correct folder. rexamsll also creates log file details import process, can found logs/log folder name {DATE}_{TIME}.log. error, ’ll also see file called {DATE}_{TIME}.msg folder.","code":"library(rexamsll) google2rmd(    \"<URL>\",    \"Example\" ) google2rmd(    \"<URL>\",    \"Example\",    sheet = 2 )"},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"id_23-extra-columns","dir":"","previous_headings":"","what":"2.3 Extra Columns","title":"1 Install","text":"Section 2.1 demonstrates columns required import questions, columns allowed. columns can added provide additional functionality, like “Image” “NCorrect” columns. extra columns match one names added question’s metadata. makes easy record searchable tags, warnings, credits. 23 May, 2023, extra metadata tags appear YAML header respective .Rmd file. Later, added exams-specific “Meta-information” footer.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"image","dir":"","previous_headings":"2.3 Extra Columns","what":"Image","title":"1 Install","text":"“Image” column deserves section. See Adding Images.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"nchoices","dir":"","previous_headings":"2.3 Extra Columns","what":"NChoices","title":"1 Install","text":"schoice mchoice questions, may options choose want appear test. example, question “letter vowel?”, choices 26 letters English alphabet. case, can add column titled “NChoices” use specify many options given tests. guaranteed least one options correct answer.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"ncorrect","dir":"","previous_headings":"2.3 Extra Columns","what":"NCorrect","title":"1 Install","text":"similar vein NChoices column “NCorrect” column, specifies many options correct answers. column can used mchoice questions. value column greater total number choices, lowered number choices. example, set NCorrect 5 question 4 possible options, NCorrect value set 4. value provided column, mchoice question choose random number 1 total number options.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"id_24-add-images","dir":"","previous_headings":"","what":"2.4 Add Images","title":"1 Install","text":"easily add images questions using Google Sheets, start inserting column titled “Image”.  Select cell column corresponding question want add image . , top menu, select “Insert” > “Image” > “Insert image cell”.  , either upload provide link image want attach, per Google’s instructions. (example, ’ll just use screenshot function wrote ’m lazy get good image tree.) image large, shrunk fit cell. affect appear exams.  Repeat image. NEXT PART IMPORTANT. way R know cells contain images. Using “Insert image cell” viewing convenience. Behind scenes, cell still appears empty! order communicate rexamsll questions attached images, need type “0” “Image” column every question image.  ’ve done , set import questions using google2rmd() normal. images downloaded saved img folder directory questions, , long properly added “0”s, appear correct questions. (case ’re curious image attached , ’s just super simple formula determining whether number even odd.)","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"id_3-design-dynamic-questions","dir":"","previous_headings":"","what":"3 Design Dynamic Questions","title":"1 Install","text":"Todo","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"a1-spreadsheet-validation","dir":"","previous_headings":"","what":"A1 Spreadsheet Validation","title":"1 Install","text":"importing questions spreadsheet, like one created Google Sheets Excel, rexamsll goes list checks validate sheet. check fails, function throw error.","code":""},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"dataframe-has-no-values","dir":"","previous_headings":"","what":"“Dataframe has no values.”","title":"1 Install","text":"Example: error occurs try import data spreadsheet header. Double check pasted correct url selected proper sheet index. Also, ’s good note images don’t count cell values.","code":"Error in rexamsll:::validate_df(df) :    Dataframe has no values. Did you select the wrong sheet?"},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"error-in-if-nrowdf--0","dir":"","previous_headings":"","what":"“Error in if (nrow(df) == 0)…”","title":"1 Install","text":"Example: error occurs try import data spreadsheet values (even header). Since data sheet, R fails load . Double check ’re importing correct URL sheet.","code":"Error in if (nrow(df) == 0) stop(\"Dataframe has no values. Did you select the wrong sheet?\") :    argument is of length zero In addition: Warning message: No data found on worksheet."},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"missing-columns-","dir":"","previous_headings":"","what":"“Missing columns: …”","title":"1 Install","text":"Example:  header missing least one required columns: Question Type Correct Category Subcat Add listed headers first row sheet, check Build Sheet learn use columns. Side note: Interestingly, headers don’t need first row; just need first non-empty row sheet. can many empty rows ’d like.","code":"Error in rexamsll:::validate_df(df) : Missing columns: type"},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"no-answer-columns-found","dir":"","previous_headings":"","what":"“No answer columns found”","title":"1 Install","text":"Example:  rexamsll requires least ONE column format “Ans#” sheet, throw error. moment, rexamsll throws error even questions string type, meaning columns empty. case, just add single “Ans1” column leave blank.","code":"Error in rexamsll:::validate_df(df) : No answer columns found"},{"path":"https://rexamsll.examLing.org/HOWTO.html","id":"no-values-in-answer-columns","dir":"","previous_headings":"","what":"“No values in answer columns.”","title":"1 Install","text":"Example:  error thrown schoice mchoice question answers choose . fix , either: Add answers row. Set “Type” string.","code":"Error in which(na_rows & !sr_rows) %>% paste0(collapse = \", \") %>% sprintf(msg,  :    Row 1 has no values in answer columns."},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":null,"dir":"","previous_headings":"","what":"Style Guide","title":"Style Guide","text":"style guide standardizes tidies code found R directory package. rules set applied function, exported otherwise, rexamsll package. style guide apply R/templates.R. guide loosely based style guide supplied Advanced R, http://adv-r..co.nz/Style.html, turn built upon Google’s R style guide.","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"general-naming-conventions","dir":"","previous_headings":"Naming","what":"General Naming Conventions","title":"Style Guide","text":"Variable, file, function names lowercase. Separate words names underscores (create_id.R) number “2” represent exams-style conversion (exams2js.R). utils-pipe.R exception rule.","code":""},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"variables","dir":"","previous_headings":"Naming","what":"Variables","title":"Style Guide","text":"Avoid generic variable names df res. Add one two words describe intentions variables, like df -> df_dynamic, substitute entirely like res -> row. reader knows variable result appears end function, need specify. However, df x acceptable generic parameter names.","code":""},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"helper-functions","dir":"","previous_headings":"Naming","what":"Helper Functions","title":"Style Guide","text":"Helper functions functions used rexamsll functions meant directly called user. functions exported usually share name file appear . Helper functions end single extra underscore end mark purely internal functions. Helper functions just called <function-name>_helper_; give functions short, descriptive names say meant used.","code":"# Good add_four <- function(a) {     total <- add_(a, 4)     total }  add_ <- function(a, b) {     total <- a + b     total }  # Bad add_four_helper_ <- function(a, b) {     ... }  ## Assuming \"add\" is not exported add <- function(a, b) {     ... }"},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"file-names","dir":"","previous_headings":"Naming","what":"File Names","title":"Style Guide","text":"file names end .R extension, opposed lowercase .r extension. file’s name match primary function found file.","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"line-width","dir":"","previous_headings":"Syntax","what":"Line Width","title":"Style Guide","text":"lines fit within 80 characters. exceptions lines particularly long strings shortened. function definition longer 80 characters, give parameter line, first parameter sharing line function definition. closing parentheses starting curly bracket go line, indentation level equal function definition. allows editor properly assess indentation level function content without author needing press backspace repeatedly. function call long, arguments come first line, one level indentation greater function name. allows quick changes first line without needing update every argument’s spacing. closing parentheses still appear line. argument receive line cases. exception function paste (paste0), many arguments put line possible. Another exception tryCatch, , first argument code block surrounded curly braces, first curly brace go line tryCatch. code block still indented curly brace went line. , even better, explicitly name first argument expr.","code":"# Good do_thing <- function(parameter1,                      parameter2 = 2,                      parameter3 = 3,                      ...,                      parameter4 = 4 ) {     <code content> }  resulting_thing <- do_thing(     \"This is a very long string that takes up way too much space, but there's no way around it.\",     2,     3,     \"dots\",     4 )  together_string <- paste(c(     \"This\", \"is\", \"a\", \"very\", \"long\", \"string\", \"that\", \"takes\", \"up\", \"way\",     \"too\", \"much\", \"space,\", \"but\", \"there's\", \"no\", \"way\", \"around\", \"it.\" ), collapse = \" \")  attempted_thing <- tryCatch({         x %>%             difficult_thing() %>%             second_thing()     },     error = ... )  # Better  attempted_thing <- tryCatch(     expr = {         x %>%             difficult_thing() %>%             second_thing()     },     error = ... )  # Bad do_thing <- function(parameter1, parameter2 = 2, parameter3 = 3, ..., parameter4 = 4) {     <code content> }  do_thing <- function(parameter1,                      parameter2 = 2,                      parameter3 = 3,                      ...,                      parameter4 = 4) {                         <code content>                      }  resulting_thing <- do_thing(\"This is a very long string that takes up way too much space, but there's no way around it.\",                             2,                             3,                             \"dots\",                             4 )"},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"spaces","dir":"","previous_headings":"Syntax","what":"Spaces","title":"Style Guide","text":"Place spaces around infix operators, including = operators function calls definitions, excluding operators :, ::, :::. Always add space comma, . Don’t add extra spaces align things. ’ll just re-align later.","code":"# Good average <- add(a = 4, b = 2) / 2  # Bad average<-add(a=4, b=2)/2 # Good df_all[5, ]  # Bad df_all[5,] # Good num8 <- 8 num9 <- 9 num10 <- 10  # Bad num8  <- 8 num9  <- 9 num10 <- 10"},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"indentation","dir":"","previous_headings":"Syntax","what":"Indentation","title":"Style Guide","text":"indent code, use 4 spaces. VSCode, “Tab” button automatically use indentation method long indentation option bottom bar set “Spaces: 4”. Entering lower scope surrounded curly braces adds 4 spaces indentation. writing multi-line function definition, indentation parameter match first.","code":"# Good if (true) {     do_thing() }  # Bad if (true) {   do_thing() }  if (true) { do_thing() } # Good do_thing <- function(parameter1,                      parameter2 = 2,                      parameter3 = 3,                      ...,                      parameter4 = 4 ) {     <code content> }  # Bad do_thing <- function(parameter1,     parameter2 = 2,     parameter3 = 3,     ...,     parameter4 = 4 ) {     <code content> }"},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"curly-brackets","dir":"","previous_headings":"Syntax","what":"Curly Brackets","title":"Style Guide","text":"Opening curly brackets never go lines. Conversely, closing curly brackets always go lines, unless followed else. Include curly brackets multi-line statements.","code":"# Good if (true) {     do_thing() } else {     do_other_thing() }  # Bad if (true) {     do_thing() } else {     do_other_thing() }  if (true) {     do_thing() } # Good if (true) {     do_thing() }  if (true) do_thing()  # Bad if (true)     do_thing()"},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"pipes","dir":"","previous_headings":"Syntax","what":"Pipes","title":"Style Guide","text":"Use magrittr pipes (%>%) whenever variable value goes series transformations, reading function names reverse order confusing. use pipe subjective matter, avoid using one function called. use magrittr’s dot variable (.) left-hand-side first variable right-hand-side. words, use dot need . right-hand-side arguments left-hand-side, still include parentheses order emphasize right-hand-side’s status function. Pipes appear end line. following lines continue pipeline indented one starting line.","code":"# Good a <- b %>%     do_thing() %>%     add(4)  a <- b %>%     do_thing() %>%     add(4, .)  # Bad a <- b %>% do_thing() %>% add(4)  a <- b %>%     do_thing %>%     add(4)  a <- b %>%     do_thing() %>%     add(., 4)  a <- b %>%     do_thing()"},{"path":[]},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"return-values","dir":"","previous_headings":"Semantics","what":"Return Values","title":"Style Guide","text":"function return value, return value must saved variable. final line function must variable, alone. big functions, add empty line final return line distinguish .","code":"# Good add <- function(a, b) {     total <- a + b     total }  # Bad add <- function(a, b) {     a + b }  add <- function(a, b, d) {     total <- add(a, b)     total + d }"},{"path":"https://rexamsll.examLing.org/STYLEGUIDE.html","id":"internal-functions","dir":"","previous_headings":"Semantics","what":"Internal Functions","title":"Style Guide","text":"using rexamsll function, even one exported, add prefix rexamsll::. function exported, need three colons: rexamsll:::. apply helper functions appear file.","code":"# Good res_txt <- rexamsll:::img2txt(imgpath)  res_txt <- make_text_(x)  # Bad res_text <- img2txt(imgpath)"},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"section2","dir":"Articles","previous_headings":"","what":"Generate .Rmd Files from Google Sheets","title":"google-sheets","text":"rexamsll allows conveniently write test questions Google Sheets document import .Rmd files use exams package.","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"section2_1","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Build the Sheet","title":"google-sheets","text":"Create new Google Sheets document, fill row 1 following headers: ID Question Type Image Ans1, Ans2, Ans3…* Correct Category SubCat  * may use number Ans columns. Simply label accordingly. adding text, click light gray box top right corner select entire spreadsheet.  , set entire Sheet plain text. , Press button says “123” (left font-selection box) choose “Plain Text”.  ensures numbers input saved exactly write . add question, start putting unique identifier ID column. multiple rows identifier, associated (See Design Dynamic Questions). , write main body text question Question column. rexamsll uses R-markdown format text, can, example, bold text typing “**” side.  Type column dictates kind answer expected question. three main choices: schoice - single correct answer, options wrong. mchoice - number correct answers, student graded many select without choosing incorrect answers. string - provided answers student instead given area input text. student’s response must exactly match correct answer receive credit. Type “string”, provide answers student need choose columns starting Ans, including correct incorrect options. need use Ans columns.  Correct column used differently depending Type. schoice questions, Correct value index corresponding correct answer. example provided, correct answer “Giraffe”, column Ans3. Therefore, Correct column say “3”. mchoice questions, Correct value comma-separated list correct indices. example, correct answers lie columns Ans1 Ans3, cell say “1, 3”. string questions, Correct value exact correct answer. example, question “color chlorophyll?”, cell say “green”.  Category SubCat columns used organization naming files. values short, informative names help keep track topics. Questions Category values appear tests.  Now, add another row every question want generate .Rmd file .  Give Sheet title , optionally, click “View” -> “Freeze” -> “1 row” keep header row visible scrolling.","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"extra-columns","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Extra Columns","title":"google-sheets","text":"previous section demonstrates columns required import questions, columns allowed. columns can added provide additional functionality, like “Image” “NCorrect” columns. extra columns match one names added question’s metadata. makes easy record searchable tags, warnings, credits. 23 May, 2023, extra metadata tags appear YAML header respective .Rmd file. Later, added exams-specific “Meta-information” footer.","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"image","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets > Extra Columns","what":"Image","title":"google-sheets","text":"easily add images questions using Google Sheets, start inserting column titled “Image”.  Select cell column corresponding question want add image . , top menu, select “Insert” > “Image” > “Insert image cell”.  , either upload provide link image want attach, per Google’s instructions. (example, ’ll just use screenshot function wrote ’m lazy get good image tree.) image large, shrunk fit cell. affect appear exams.  Repeat image. ’ve done , set import questions using google2rmd() normal. images downloaded saved img folder directory questions appear correct questions. (case ’re curious image attached , ’s just super simple formula determining whether number even odd.)","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"section2_3_2","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets > Extra Columns","what":"NChoices","title":"google-sheets","text":"schoice mchoice questions, may options choose want appear test. example, question “letter vowel?”, choices 26 letters English alphabet. case, can add column titled “NChoices” use specify many options given tests. guaranteed least one options correct answer.","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"ncorrect","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets > Extra Columns","what":"NCorrect","title":"google-sheets","text":"similar vein NChoices column “NCorrect” column, specifies many options correct answers. column can used mchoice questions. value column greater total number choices, lowered number choices. example, set NCorrect 5 question 4 possible options, NCorrect value set 4. value provided column, mchoice question choose random number 1 total number options.","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"section3","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Design Dynamic Questions","title":"google-sheets","text":"Todo","code":""},{"path":"https://rexamsll.examLing.org/articles/google-sheets.html","id":"import-into-r","dir":"Articles","previous_headings":"Generate .Rmd Files from Google Sheets","what":"Import into R","title":"google-sheets","text":"Start loading rexamsll package. Use setwd place working directory want folder .Rmd files saved. navigate back spreadsheet containing questions copy entire URL (“https://docs.google.com/spreadsheets/d/…”). Paste URL first argument url rexamsll function google2rmd. Set second argument output_dir folder want store resulting .Rmd files . loading questions sheet spreadsheet first, ’ll need specify index name sheet google2rmd. example, ’re “Sheet2”, include sheet = 2 sheet = \"Sheet2\".  NOTE: index depends order sheets, names. following screenshot, “Sheet3” placed “Sheet2”. , “Sheet3” index 2, “Sheet2” index 3.  run function, asked grant access Google account. select “Send browser new auth process.” R terminal. Even “pre-authorized accounts” available, aren’t reliable, stick logging time start fresh R session. sent browser, select account spreadsheet stored sign . presented following screen.  Check box labeled “See, edit, create, delete Google Drive files.” press “Continue” button. process done! Assuming issues spreadsheet, R load proper Google Sheets document save .Rmd files correct folder. rexamsll also creates log file details import process, can found logs/log folder name {DATE}_{TIME}.log. error, ’ll also see file called {DATE}_{TIME}.msg folder.","code":"library(rexamsll) google2rmd(    \"<URL>\",    \"Example\" ) google2rmd(    \"<URL>\",    \"Example\",    sheet = 2 )"},{"path":"https://rexamsll.examLing.org/articles/installation.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"installation","text":"rexamsll development, recently pushed version can installed GitHub using devtools library. order gain access package’s source code, ’ll need GitHub account permission project administrator access repository. haven’t worked git , check https://docs.github.com/en/get-started/getting-started--git. git account, need create authentication token R can access repositories. just means signing get special password GitHub R can use . start, input GitHub username email associated account respective strings , run code cell. open browser ask sign GitHub bringing page titled “New personal access token”. Start providing reason token’s creation “Note” section. can also change expiration date token, though default value 30 days works perfectly well.  need change selections “Select scopes” section. “repo” section enabled default need give R access .  Now, click green “Create Token” bottom page. presented page looks like following, code starts ghp_. (Note code censored example image.)  Copy code , optionally, save somewhere secure use later. Paste text says <AUTH CODE > chunk . sure delete < >; authentication code within quotes. run code chunk install rexamsll. check rexamsll installed properly, run following code chunk make sure errors.","code":"install.packages(\"devtools\") usethis::use_git_config(user.name = \"<USERNAME>\",                         user.email = \"<YOUR>@<EMAIL>.com\") usethis::create_github_token() library(devtools) install_github(\"examLing/rexamsll\", ref = \"main\",                auth_token = \"<AUTH CODE HERE>\") library(rexamsll)"},{"path":"https://rexamsll.examLing.org/articles/spreadsheet-validation.html","id":"spreadsheet-validation","dir":"Articles","previous_headings":"","what":"Spreadsheet Validation","title":"spreadsheet-validation","text":"importing questions spreadsheet, like one created Google Sheets Excel, rexamsll goes list checks validate sheet. check fails, function throw error.","code":""},{"path":"https://rexamsll.examLing.org/articles/spreadsheet-validation.html","id":"dataframe-has-no-values-","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“Dataframe has no values.”","title":"spreadsheet-validation","text":"Example: error occurs try import data spreadsheet header. Double check pasted correct url selected proper sheet index. Also, ’s good note images don’t count cell values.","code":"Error in rexamsll:::validate_df(df) :    Dataframe has no values. Did you select the wrong sheet?"},{"path":"https://rexamsll.examLing.org/articles/spreadsheet-validation.html","id":"error-in-if-nrowdf-0","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“Error in if (nrow(df) == 0)…”","title":"spreadsheet-validation","text":"Example: error occurs try import data spreadsheet values (even header). Since data sheet, R fails load . Double check ’re importing correct URL sheet.","code":"Error in if (nrow(df) == 0) stop(\"Dataframe has no values. Did you select the wrong sheet?\") :    argument is of length zero In addition: Warning message: No data found on worksheet."},{"path":"https://rexamsll.examLing.org/articles/spreadsheet-validation.html","id":"missing-columns","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“Missing columns: …”","title":"spreadsheet-validation","text":"Example:  header missing least one required columns: Question Type Correct Category Subcat Add listed headers first row sheet, check Build Sheet learn use columns. Side note: Interestingly, headers don’t need first row; just need first non-empty row sheet. can many empty rows ’d like.","code":"Error in rexamsll:::validate_df(df) : Missing columns: type"},{"path":"https://rexamsll.examLing.org/articles/spreadsheet-validation.html","id":"no-answer-columns-found","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“No answer columns found”","title":"spreadsheet-validation","text":"Example:  rexamsll requires least ONE column format “Ans#” sheet, throw error. moment, rexamsll throws error even questions string type, meaning columns empty. case, just add single “Ans1” column leave blank.","code":"Error in rexamsll:::validate_df(df) : No answer columns found"},{"path":"https://rexamsll.examLing.org/articles/spreadsheet-validation.html","id":"no-values-in-answer-columns-","dir":"Articles","previous_headings":"Spreadsheet Validation","what":"“No values in answer columns.”","title":"spreadsheet-validation","text":"Example:  error thrown schoice mchoice question answers choose . fix , either: Add answers row. Set “Type” string.","code":"Error in which(na_rows & !sr_rows) %>% paste0(collapse = \", \") %>% sprintf(msg,  :    Row 1 has no values in answer columns."},{"path":"https://rexamsll.examLing.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brighton Pauli. Author, maintainer.","code":""},{"path":"https://rexamsll.examLing.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pauli B (2023). rexamsll: Easily Build Tests Coursework. R package version 0.3.2.0, https://github.com/examLing/rexamsll, https://rexamsll.examLing.org.","code":"@Manual{,   title = {rexamsll: Easily Build Tests and Coursework},   author = {Brighton Pauli},   year = {2023},   note = {R package version 0.3.2.0, https://github.com/examLing/rexamsll},   url = {https://rexamsll.examLing.org}, }"},{"path":"https://rexamsll.examLing.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Easily Build Tests and Coursework","title":"Easily Build Tests and Coursework","text":"rexamsll development, recently pushed version can installed GitHub using devtools library.","code":"install.packages(\"devtools\")  library(devtools) install_github(\"https://github.com/examLing/rexamsll\") library(rexamsll)"},{"path":"https://rexamsll.examLing.org/index.html","id":"csv-column-headers","dir":"","previous_headings":"","what":"CSV Column Headers","title":"Easily Build Tests and Coursework","text":"Question: question text Type: One ‘schoice’, ‘mchoice’, ‘string’ Image: image file’s name (inserted image Excel/Google Sheets) Ans#: number answer columns, preferably labeled numbers Correct: index (letter corresponding ) correct answer Category: Question’s category SubCat: Questions’s subcategory","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/index.html","id":"add_questionquestion-image-explanation-see-below-df","dir":"","previous_headings":"","what":"add_question(question, image, explanation, <see below>, df)","title":"Easily Build Tests and Coursework","text":"Add question dataframe, validating /transforming inputs. Parameters: * question: Question text. * image: Image filename (optional). * explanation: Explanation correct answer (optional). * correct_ids: Numeric vector correct answer indices. * choices: Tibble answer choices, id text columns. * correct: Vector possible correct answers. * incorrect: Vector possible incorrect answers. * df: Dataframe add question . correct_ids+choices correct+incorrect provided. use first pair, correct incorrect vectors generated automatically choices using given indices. dataframe provided, new one created.","code":""},{"path":"https://rexamsll.examLing.org/index.html","id":"examples","dir":"","previous_headings":"add_question(question, image, explanation, <see below>, df)","what":"Examples","title":"Easily Build Tests and Coursework","text":"Using correct incorrect: Using correct_ids choices:","code":"df <- add_question(     question = \"Which city is located in Asia?\",     correct = c(\"Kyoto\", \"Tokyo\", \"Beijing\", \"Delhi\"),     incorrect = c(\"Paris\", \"London\", \"Washington D.C.\"),     df = df ) answers <- tribble(     ~id, ~text,     1, \"Paris\",     2, \"London\",     3, \"Kyoto\",     4, \"Delhi\",     5, \"Washington D.C.\",     6, \"Tokyo\",     7, \"Beijing\" )  df <- add_question(     question = \"Which city is located in Europe?\",     choices = answers,     correct_ids = c(1, 2),     df = df )"},{"path":"https://rexamsll.examLing.org/index.html","id":"bulleted_listx","dir":"","previous_headings":"","what":"bulleted_list(x)","title":"Easily Build Tests and Coursework","text":"Concatenate string items form bulleted list. Parameters: * x: List strings.","code":""},{"path":"https://rexamsll.examLing.org/index.html","id":"create_idcategory-subcat","dir":"","previous_headings":"","what":"create_id(category, subcat)","title":"Easily Build Tests and Coursework","text":"Create ID format “[category][subcat][random number]” Parameters: * category: category question. * subcat: subcategory question. Returns string form “[category][subcat][random number]”.","code":""},{"path":"https://rexamsll.examLing.org/index.html","id":"csv2rmdx-output_dir-","dir":"","previous_headings":"","what":"csv2rmd(x, output_dir, ...)","title":"Easily Build Tests and Coursework","text":"Convert csv file questions r/exams-style Rmd files. Parameters: * x: Filepath csv file. * output_dir: Directory write Rmd files . * ...: Additional arguments read.csv.","code":""},{"path":"https://rexamsll.examLing.org/index.html","id":"df2rmddf-output_dir","dir":"","previous_headings":"","what":"df2rmd(df, output_dir)","title":"Easily Build Tests and Coursework","text":"Convert dataframe questions r/exams-style Rmd files. Used functions package. df2rmd available user, expected run directly. Parameters: * df: Dataframe questions. * output_dir: Directory write Rmd files .","code":""},{"path":"https://rexamsll.examLing.org/index.html","id":"google2rmdurl-output_dir","dir":"","previous_headings":"","what":"google2rmd(url, output_dir)","title":"Easily Build Tests and Coursework","text":"Download Google Sheet questions convert Rmd files. Parameters: * url: URL Google Sheet. * output_dir: Directory write Rmd files .","code":""},{"path":"https://rexamsll.examLing.org/index.html","id":"xlsx2rmdx-output_dir-","dir":"","previous_headings":"","what":"xlsx2rmd(x, output_dir, ...)","title":"Easily Build Tests and Coursework","text":"Convert xlsx spreadsheet questions r/exams-style Rmd files. Parameters: * x: Filepath xlsx file. * output_dir: Directory write Rmd files . * ...: Additional arguments openxlsx::loadWorkbook. Inserted images imported xlsx file saved [output_dir]/img directory name question’s generated ID.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_from_pool.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a question to a dataframe from a pool of answers. — add_from_pool","title":"Add a question to a dataframe from a pool of answers. — add_from_pool","text":"Add question dataframe pool answers.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_from_pool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a question to a dataframe from a pool of answers. — add_from_pool","text":"","code":"add_from_pool(   question,   image = NA,   explanation = NA,   answer_pool = NA,   correct_ids = NA,   keywords = NA,   df = NA )"},{"path":"https://rexamsll.examLing.org/reference/add_from_pool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a question to a dataframe from a pool of answers. — add_from_pool","text":"question Question text. image Image filename (optional). explanation Explanation correct answer (optional). answer_pool Tibble answer choices, id text columns. correct_ids Numeric vector correct answer ids, answer_pool. df Dataframe add question .","code":""},{"path":"https://rexamsll.examLing.org/reference/add_from_pool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a question to a dataframe from a pool of answers. — add_from_pool","text":"provided dataframe df, additional row. dataframe provided, new one created.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_from_pool.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Add a question to a dataframe from a pool of answers. — add_from_pool","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a question to a dataframe, validating and/or transforming inputs. — add_question","title":"Add a question to a dataframe, validating and/or transforming inputs. — add_question","text":"Add question dataframe, validating /transforming inputs.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a question to a dataframe, validating and/or transforming inputs. — add_question","text":"","code":"add_question(   question,   image = NA,   explanation = NA,   correct = NA,   incorrect = NA,   keywords = NA,   df = NA )"},{"path":"https://rexamsll.examLing.org/reference/add_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a question to a dataframe, validating and/or transforming inputs. — add_question","text":"question Question text. image Image filename (optional). explanation Explanation correct answer (optional). correct Vector possible correct answers. incorrect Vector possible incorrect answers. keywords Vector strings insert question text. df Dataframe add question . dataframe provided, new one created.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_question.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Add a question to a dataframe, validating and/or transforming inputs. — add_question","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_string_question.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a string-type question to a dataframe compatible with schoice, etc. — add_string_question","title":"Add a string-type question to a dataframe compatible with schoice, etc. — add_string_question","text":"Add string-type question dataframe compatible schoice, etc.","code":""},{"path":"https://rexamsll.examLing.org/reference/add_string_question.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a string-type question to a dataframe compatible with schoice, etc. — add_string_question","text":"","code":"add_string_question(   question,   image = NA,   explanation = NA,   correct = NA,   keywords = NA,   df = NA )"},{"path":"https://rexamsll.examLing.org/reference/add_string_question.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a string-type question to a dataframe compatible with schoice, etc. — add_string_question","text":"question Question text image Image filename (optional) explanation Explanation correct answer (optional) correct Correct answer, string keywords Vector strings insert question text df Dataframe add question ","code":""},{"path":"https://rexamsll.examLing.org/reference/add_string_question.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Add a string-type question to a dataframe compatible with schoice, etc. — add_string_question","text":"Brighton Pauli, 2023","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/reference/build_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","title":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","text":"Choose correct incorrect answers format r/exams files.","code":""},{"path":"https://rexamsll.examLing.org/reference/build_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","text":"","code":"build_choices(question_row, nchoices, ncorrect = 1)"},{"path":"https://rexamsll.examLing.org/reference/build_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","text":"question_row Single row data. See build_question_df(). nchoices Total number choices give students. ncorrect Number choices correct (default: 1). 0 <= ncorrect <= nchoices","code":""},{"path":"https://rexamsll.examLing.org/reference/build_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","text":"Named list two string values: answerlist: Bulleted list possible choices. exsolution: Binary representation correct answer(s).","code":""},{"path":"https://rexamsll.examLing.org/reference/build_choices.html","id":"n-correct","dir":"Reference","previous_headings":"","what":"N Correct","title":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","text":"default, ncorrect set 1. warning thrown ncorrect greater nchoices. random number correct answers, set ncorrect NA, \"random\", vector two numbers. NA random set ncorrect random number 1 ncorrect, inclusively. Providing vector two numbers set ncorrect random number two numbers, inclusively.","code":""},{"path":"https://rexamsll.examLing.org/reference/build_choices.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Choose correct and incorrect answers and format them for r/exams files. — build_choices","text":"Brighton Pauli, 2023","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/reference/build_question_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a question dataframe, with question, image, correct, incorrect, and\nexplanation columns. — build_question_df","title":"Build a question dataframe, with question, image, correct, incorrect, and\nexplanation columns. — build_question_df","text":"Build question dataframe, question, image, correct, incorrect, explanation columns.","code":""},{"path":"https://rexamsll.examLing.org/reference/build_question_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a question dataframe, with question, image, correct, incorrect, and\nexplanation columns. — build_question_df","text":"","code":"build_question_df()"},{"path":"https://rexamsll.examLing.org/reference/build_question_df.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Build a question dataframe, with question, image, correct, incorrect, and\nexplanation columns. — build_question_df","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/bulleted_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate string items to form a bulleted list. — bulleted_list","title":"Concatenate string items to form a bulleted list. — bulleted_list","text":"Concatenate string items form bulleted list.","code":""},{"path":"https://rexamsll.examLing.org/reference/bulleted_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate string items to form a bulleted list. — bulleted_list","text":"","code":"bulleted_list(x)"},{"path":"https://rexamsll.examLing.org/reference/bulleted_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate string items to form a bulleted list. — bulleted_list","text":"x vector strings","code":""},{"path":"https://rexamsll.examLing.org/reference/bulleted_list.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Concatenate string items to form a bulleted list. — bulleted_list","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/bulleted_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate string items to form a bulleted list. — bulleted_list","text":"","code":"bulleted_list(c(\"a\", \"b\", \"c\")) #> [1] \"* a\\n* b\\n* c\\n\""},{"path":"https://rexamsll.examLing.org/reference/comment_out_sections_.html","id":null,"dir":"Reference","previous_headings":"","what":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","title":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","text":"Help remove sections pre-created QTI zip file.","code":""},{"path":"https://rexamsll.examLing.org/reference/comment_out_sections_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","text":"","code":"comment_out_sections_(qti_file, temp_folder, out_file = NULL)"},{"path":"https://rexamsll.examLing.org/reference/comment_out_sections_.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Help remove all sections from a pre-created QTI zip file. — comment_out_sections_","text":"Brighton Pauli, 2022","code":""},{"path":"https://rexamsll.examLing.org/reference/create_id.html","id":null,"dir":"Reference","previous_headings":"","what":"create an ID with format ","title":"create an ID with format ","text":"create ID format \"[category][subcat][random number]\"","code":""},{"path":"https://rexamsll.examLing.org/reference/create_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create an ID with format ","text":"","code":"create_id(category, subcat = NA)"},{"path":"https://rexamsll.examLing.org/reference/create_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create an ID with format ","text":"category category question. subcat subcategory question (optional).","code":""},{"path":"https://rexamsll.examLing.org/reference/create_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create an ID with format ","text":"string form \"[category][subcat][random number]\".","code":""},{"path":"https://rexamsll.examLing.org/reference/create_id.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"create an ID with format ","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/csv2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a csv file of questions into r/exams-style Rmd files. — csv2rmd","title":"Convert a csv file of questions into r/exams-style Rmd files. — csv2rmd","text":"Convert csv file questions r/exams-style Rmd files.","code":""},{"path":"https://rexamsll.examLing.org/reference/csv2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a csv file of questions into r/exams-style Rmd files. — csv2rmd","text":"","code":"csv2rmd(x, output_dir, ...)"},{"path":"https://rexamsll.examLing.org/reference/csv2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a csv file of questions into r/exams-style Rmd files. — csv2rmd","text":"x Filepath csv file. output_dir Directory write Rmd files . ... Additional arguments read.csv.","code":""},{"path":"https://rexamsll.examLing.org/reference/csv2rmd.html","id":"csv-format","dir":"Reference","previous_headings":"","what":"csv format","title":"Convert a csv file of questions into r/exams-style Rmd files. — csv2rmd","text":"csv file following columns: Question: question text Type: \"schoice\", \"mchoice\", \"string\" Image: image file's name Ans1: answer text first answer Ans2: answer text second answer Ans3: answer text third answer Ans4: answer text fourth answer Ans5: answer text fifth answer Correct: correct answer number (1-5) Category: category question SubCat: subcategory question","code":""},{"path":"https://rexamsll.examLing.org/reference/csv2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Convert a csv file of questions into r/exams-style Rmd files. — csv2rmd","text":"Brighton Pauli, 2022.","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/reference/df2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a dataframe of questions into r/exams-style Rmd files. — df2rmd","title":"Convert a dataframe of questions into r/exams-style Rmd files. — df2rmd","text":"Convert dataframe questions r/exams-style Rmd files.","code":""},{"path":"https://rexamsll.examLing.org/reference/df2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a dataframe of questions into r/exams-style Rmd files. — df2rmd","text":"","code":"df2rmd(df, output_dir)"},{"path":"https://rexamsll.examLing.org/reference/df2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a dataframe of questions into r/exams-style Rmd files. — df2rmd","text":"df Dataframe questions. output_dir Directory write Rmd files .","code":""},{"path":"https://rexamsll.examLing.org/reference/df2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Convert a dataframe of questions into r/exams-style Rmd files. — df2rmd","text":"Inspired Achim's csv2rmd function. Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/drop_sections.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all sections from a pre-created QTI zip file. — drop_sections","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"Remove sections pre-created QTI zip file.","code":""},{"path":"https://rexamsll.examLing.org/reference/drop_sections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"","code":"drop_sections(qti_file, out_file = NULL)"},{"path":"https://rexamsll.examLing.org/reference/drop_sections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"qti_file .zip file edit out_file .zip file write .","code":""},{"path":"https://rexamsll.examLing.org/reference/drop_sections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"out_file given, default qti_file, _nosect appended extension. out_file given, must end extension .zip.","code":""},{"path":"https://rexamsll.examLing.org/reference/drop_sections.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Remove all sections from a pre-created QTI zip file. — drop_sections","text":"Brighton Pauli, 2022","code":""},{"path":"https://rexamsll.examLing.org/reference/dyna_question_segment_.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single add_from_pool call for this row — dyna_question_segment_","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"Generate single add_from_pool call row","code":""},{"path":"https://rexamsll.examLing.org/reference/dyna_question_segment_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"","code":"dyna_question_segment_(index, df, meta_cols)"},{"path":"https://rexamsll.examLing.org/reference/dyna_question_segment_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"row \"schoice\" \"mchoice\" row validated rexamsll dataframe","code":""},{"path":"https://rexamsll.examLing.org/reference/dyna_question_segment_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single add_from_pool call for this row — dyna_question_segment_","text":"String calls add_from_pool","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/reference/dyna_string_question_segment_.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a single add_string_question call for this row — dyna_string_question_segment_","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"Generate single add_string_question call row","code":""},{"path":"https://rexamsll.examLing.org/reference/dyna_string_question_segment_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"","code":"dyna_string_question_segment_(index, df, meta_cols)"},{"path":"https://rexamsll.examLing.org/reference/dyna_string_question_segment_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"index index \"string\" row df df validated rexamsll dataframe","code":""},{"path":"https://rexamsll.examLing.org/reference/dyna_string_question_segment_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a single add_string_question call for this row — dyna_string_question_segment_","text":"String calls add_string_question","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/reference/end_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for logr::log_close() — end_logs","title":"Wrapper for logr::log_close() — end_logs","text":"Wrapper logr::log_close()","code":""},{"path":"https://rexamsll.examLing.org/reference/end_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for logr::log_close() — end_logs","text":"","code":"end_logs()"},{"path":"https://rexamsll.examLing.org/reference/exams2js.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a simple Javascript-powered quiz for testing purposes. — exams2js","title":"Create a simple Javascript-powered quiz for testing purposes. — exams2js","text":"Create simple Javascript-powered quiz testing purposes.","code":""},{"path":"https://rexamsll.examLing.org/reference/exams2js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a simple Javascript-powered quiz for testing purposes. — exams2js","text":"","code":"exams2js(   file,   n = 1L,   nsamp = NULL,   dir = \".\",   template = NULL,   name = NULL,   quiet = TRUE,   edir = NULL,   tdir = NULL,   sdir = NULL,   verbose = FALSE,   question = \"<h4>Question<\/h4>\",   solution = \"<h4>Solution<\/h4>\",   mathjax = NULL,   resolution = 100,   width = 4,   height = 4,   svg = FALSE,   encoding = \"\",   envir = NULL,   converter = NULL,   seed = NULL,   ... )"},{"path":"https://rexamsll.examLing.org/reference/exams2js.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Create a simple Javascript-powered quiz for testing purposes. — exams2js","text":"Modified exams2html, Achim.","code":""},{"path":"https://rexamsll.examLing.org/reference/find_answer_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all answer columns in a dataframe. — find_answer_columns","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"Find answer columns dataframe.","code":""},{"path":"https://rexamsll.examLing.org/reference/find_answer_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"","code":"find_answer_columns(df)"},{"path":"https://rexamsll.examLing.org/reference/find_answer_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"df Dataframe search.","code":""},{"path":"https://rexamsll.examLing.org/reference/find_answer_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"Vector column indices","code":""},{"path":"https://rexamsll.examLing.org/reference/find_answer_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"answer column column header starts \"ans\" \"Ans\".","code":""},{"path":"https://rexamsll.examLing.org/reference/find_answer_columns.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Find all answer columns in a dataframe. — find_answer_columns","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/find_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate all exercise files that match the metadata filters. — find_questions","title":"Locate all exercise files that match the metadata filters. — find_questions","text":"Locate exercise files match metadata filters.","code":""},{"path":"https://rexamsll.examLing.org/reference/find_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate all exercise files that match the metadata filters. — find_questions","text":"","code":"find_questions(dir, ..., pattern = \".*\")"},{"path":"https://rexamsll.examLing.org/reference/find_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate all exercise files that match the metadata filters. — find_questions","text":"dir Directory containing exercise .Rmd files search . ... Expressions return logical value. See filter. pattern Optional regular expression filter file names","code":""},{"path":"https://rexamsll.examLing.org/reference/find_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate all exercise files that match the metadata filters. — find_questions","text":"Dataframe columns filename qvariation.","code":""},{"path":"https://rexamsll.examLing.org/reference/find_questions.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Locate all exercise files that match the metadata filters. — find_questions","text":"Brighton Pauli, 2023","code":""},{"path":"https://rexamsll.examLing.org/reference/get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","title":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","text":"Retrieve r/exams-specific metadata question's .Rmd file.","code":""},{"path":"https://rexamsll.examLing.org/reference/get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","text":"","code":"get_metadata(filename = \"\", directory = \"\")"},{"path":"https://rexamsll.examLing.org/reference/get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","text":"filename Name .Rmd file. extensions ignored. directory Optional. Folder file can found .","code":""},{"path":"https://rexamsll.examLing.org/reference/get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","text":"Tibble metadata values, named appropriately, filename qvariation columns.","code":""},{"path":"https://rexamsll.examLing.org/reference/get_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","text":"filename left blank, file explorer window opened.","code":""},{"path":"https://rexamsll.examLing.org/reference/get_metadata.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Retrieve all r/exams-specific metadata from a question's .Rmd file. — get_metadata","text":"Brighton Pauli, 2023","code":""},{"path":"https://rexamsll.examLing.org/reference/google2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","title":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","text":"Download Google Sheet questions convert Rmd files.","code":""},{"path":"https://rexamsll.examLing.org/reference/google2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","text":"","code":"google2rmd(url, output_dir, sheet = 1, log_file = NA)"},{"path":"https://rexamsll.examLing.org/reference/google2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","text":"url URL Google Sheet. output_dir Directory write Rmd files .","code":""},{"path":"https://rexamsll.examLing.org/reference/google2rmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","text":"image imported Sheet saved 'img' directory name question's generated ID.","code":""},{"path":"https://rexamsll.examLing.org/reference/google2rmd.html","id":"sheet-format","dir":"Reference","previous_headings":"","what":"Sheet format","title":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","text":"xlsx file following columns: Question: question text Image: image file Type: \"schoice\", \"mchoice\", \"string\" Ans1: answer text first answer Ans2: answer text second answer Ans3: answer text third answer Ans4: answer text fourth answer Ans5: answer text fifth answer Correct: correct answer number (1-5) Category: category question SubCat: subcategory question","code":""},{"path":"https://rexamsll.examLing.org/reference/google2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Download a Google Sheet of questions and convert it to Rmd files. — google2rmd","text":"Brighton Pauli, 2022.","code":""},{"path":[]},{"path":"https://rexamsll.examLing.org/reference/img2txt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an image into a very rough text representation. — img2txt","title":"Convert an image into a very rough text representation. — img2txt","text":"Convert image rough text representation.","code":""},{"path":"https://rexamsll.examLing.org/reference/img2txt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an image into a very rough text representation. — img2txt","text":"","code":"img2txt(imgpath, h = 10)"},{"path":"https://rexamsll.examLing.org/reference/img2txt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an image into a very rough text representation. — img2txt","text":"imgpath File path image. h Height result image, number lines. (Default 10)","code":""},{"path":"https://rexamsll.examLing.org/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rexamsll.examLing.org/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rexamsll.examLing.org/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rexamsll.examLing.org/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rexamsll.examLing.org/reference/reformat_string_.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix strings for use in dynamic R code chunks — reformat_string_","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"Fix strings use dynamic R code chunks","code":""},{"path":"https://rexamsll.examLing.org/reference/reformat_string_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"","code":"reformat_string_(s)"},{"path":"https://rexamsll.examLing.org/reference/reformat_string_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"s String reformatted","code":""},{"path":"https://rexamsll.examLing.org/reference/reformat_string_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix strings for use in dynamic R code chunks — reformat_string_","text":"String can used R code","code":""},{"path":"https://rexamsll.examLing.org/reference/start_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a log file, if needed, and run logr::log_open — start_logs","title":"Create a log file, if needed, and run logr::log_open — start_logs","text":"Create log file, needed, run logr::log_open","code":""},{"path":"https://rexamsll.examLing.org/reference/start_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a log file, if needed, and run logr::log_open — start_logs","text":"","code":"start_logs(filepath = NA)"},{"path":"https://rexamsll.examLing.org/reference/start_logs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a log file, if needed, and run logr::log_open — start_logs","text":"filepath Path write logs .","code":""},{"path":"https://rexamsll.examLing.org/reference/start_logs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a log file, if needed, and run logr::log_open — start_logs","text":"default, path logs \"./logs/yyyymmdd_hhmmsss.log\"","code":""},{"path":"https://rexamsll.examLing.org/reference/validate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure that a dataframe conforms to rexamsll standards, stopping otherwise. — validate_df","title":"Ensure that a dataframe conforms to rexamsll standards, stopping otherwise. — validate_df","text":"Ensure dataframe conforms rexamsll standards, stopping otherwise.","code":""},{"path":"https://rexamsll.examLing.org/reference/validate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure that a dataframe conforms to rexamsll standards, stopping otherwise. — validate_df","text":"","code":"validate_df(df)"},{"path":"https://rexamsll.examLing.org/reference/validate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure that a dataframe conforms to rexamsll standards, stopping otherwise. — validate_df","text":"df Dataframe validate.","code":""},{"path":"https://rexamsll.examLing.org/reference/validate_df.html","id":"requirements","dir":"Reference","previous_headings":"","what":"Requirements","title":"Ensure that a dataframe conforms to rexamsll standards, stopping otherwise. — validate_df","text":"dataframe must following columns: Question Type Correct Category Previously, Image column also required. Now, Image column, empty one added. columns must plain text. must least one answer column.","code":""},{"path":"https://rexamsll.examLing.org/reference/validate_df.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Ensure that a dataframe conforms to rexamsll standards, stopping otherwise. — validate_df","text":"Brighton Pauli, 2022.","code":""},{"path":"https://rexamsll.examLing.org/reference/xlsx2rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","title":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","text":"Convert xlsx spreadsheet questions r/exams-style Rmd files.","code":""},{"path":"https://rexamsll.examLing.org/reference/xlsx2rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","text":"","code":"xlsx2rmd(x, output_dir, ..., sheet = 1, log_file = NA, url = NA)"},{"path":"https://rexamsll.examLing.org/reference/xlsx2rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","text":"x Filepath xlsx file. output_dir Directory write Rmd files . ... Additional arguments openxlsx::loadWorkbook.","code":""},{"path":"https://rexamsll.examLing.org/reference/xlsx2rmd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","text":"image imported xlsx file saved 'img' directory name question's generated ID.","code":""},{"path":"https://rexamsll.examLing.org/reference/xlsx2rmd.html","id":"xlsx-format","dir":"Reference","previous_headings":"","what":"xlsx format","title":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","text":"xlsx file following columns: Question: question text Image: image file Type: \"schoice\", \"mchoice\", \"string\" Ans1: answer text first answer Ans2: answer text second answer Ans3: answer text third answer Ans4: answer text fourth answer Ans5: answer text fifth answer Correct: correct answer number (1-5) Category: category question SubCat: subcategory question","code":""},{"path":"https://rexamsll.examLing.org/reference/xlsx2rmd.html","id":"credits","dir":"Reference","previous_headings":"","what":"Credits","title":"Convert an xlsx spreadsheet of questions into r/exams-style Rmd files. — xlsx2rmd","text":"Brighton Pauli, 2022.","code":""},{"path":[]}]
